{"ast":null,"code":"var _jsxFileName = \"/Users/farshadghazanfari/Documents/www/npat/components/Game/FinalScreen.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { avatars } from '../../constants/theme';\nimport { Button, FlexContainer, FlexColumn } from '../StyledComponents';\nconst FinalScreen = ({\n  scores,\n  handleRestartGame\n}) => {\n  let winner = {\n    score: 0\n  };\n  scores.forEach(score => {\n    if (score.score > winner.score) winner = {\n      score: score.score,\n      name: score.name\n    };\n  });\n  return __jsx(FlexColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, \"Final Scores\"), __jsx(FlexContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, scores.map(user => {\n    return __jsx(\"div\", {\n      style: {\n        margin: \"0 20px\",\n        textAlign: \"center\"\n      },\n      key: user.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 16\n      }\n    }, __jsx(\"img\", {\n      alt: `${user.name} avatar`,\n      src: avatars[user.avatarId],\n      width: 60,\n      height: 60,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, user.name, \": \", user.score));\n  })), __jsx(\"h2\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, `ðŸŽ‰ðŸŽ‰ The winner is: ${winner.name || 'No winner!'} ðŸŽ‰ðŸŽ‰`), __jsx(Button, {\n    fontSize: \"25px\",\n    padding: \"15px\",\n    minWidth: \"220px\",\n    onClick: event => {\n      event.preventDefault();\n      handleRestartGame(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 6\n    }\n  }, \"Play Again\"));\n};\nexport default FinalScreen;","map":{"version":3,"names":["React","avatars","Button","FlexContainer","FlexColumn","FinalScreen","scores","handleRestartGame","winner","score","forEach","name","__jsx","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","user","style","margin","textAlign","key","alt","src","avatarId","width","height","fontSize","padding","minWidth","onClick","event","preventDefault"],"sources":["/Users/farshadghazanfari/Documents/www/npat/components/Game/FinalScreen.js"],"sourcesContent":["import React from 'react';\n\nimport { avatars } from '../../constants/theme'\nimport { Button, FlexContainer, FlexColumn } from '../StyledComponents'\n\nconst FinalScreen = ({ scores, handleRestartGame }) => {\n  let winner = {\n    score: 0,\n  };\n  scores.forEach(score => {\n    if (score.score > winner.score) winner = {\n      score: score.score,\n      name: score.name\n    }\n  })\n\n\n  return <FlexColumn>\n    <h2>Final Scores</h2>\n    <FlexContainer>\n      {scores.map(user => {\n        return <div style={{ margin: \"0 20px\", textAlign: \"center\" }} key={user.name}>\n          <img alt={`${user.name} avatar`} src={avatars[user.avatarId]} width={60} height={60} />\n          <p>{user.name}: {user.score}</p>\n        </div>\n      })\n      }\n    </FlexContainer>\n    <h2 style={{ textAlign: \"center\" }}>{`ðŸŽ‰ðŸŽ‰ The winner is: ${winner.name || 'No winner!'} ðŸŽ‰ðŸŽ‰`}</h2>\n    {<Button fontSize=\"25px\" padding=\"15px\" minWidth=\"220px\" onClick={(event) => {\n      event.preventDefault()\n      handleRestartGame(event)\n    }}>Play Again</Button>}\n  </FlexColumn >\n}\n\nexport default FinalScreen"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,OAAO,QAAQ,uBAAuB;AAC/C,SAASC,MAAM,EAAEC,aAAa,EAAEC,UAAU,QAAQ,qBAAqB;AAEvE,MAAMC,WAAW,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAkB,CAAC,KAAK;EACrD,IAAIC,MAAM,GAAG;IACXC,KAAK,EAAE;EACT,CAAC;EACDH,MAAM,CAACI,OAAO,CAACD,KAAK,IAAI;IACtB,IAAIA,KAAK,CAACA,KAAK,GAAGD,MAAM,CAACC,KAAK,EAAED,MAAM,GAAG;MACvCC,KAAK,EAAEA,KAAK,CAACA,KAAK;MAClBE,IAAI,EAAEF,KAAK,CAACE;IACd,CAAC;EACH,CAAC,CAAC;EAGF,OAAOC,KAAA,CAACR,UAAU;IAAAS,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAChBN,KAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,cAAgB,CAAC,EACrBN,KAAA,CAACT,aAAa;IAAAU,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACXZ,MAAM,CAACa,GAAG,CAACC,IAAI,IAAI;IAClB,OAAOR,KAAA;MAAKS,KAAK,EAAE;QAAEC,MAAM,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAS,CAAE;MAACC,GAAG,EAAEJ,IAAI,CAACT,IAAK;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAC3EN,KAAA;MAAKa,GAAG,EAAG,GAAEL,IAAI,CAACT,IAAK,SAAS;MAACe,GAAG,EAAEzB,OAAO,CAACmB,IAAI,CAACO,QAAQ,CAAE;MAACC,KAAK,EAAE,EAAG;MAACC,MAAM,EAAE,EAAG;MAAAhB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,EACvFN,KAAA;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAIE,IAAI,CAACT,IAAI,EAAC,IAAE,EAACS,IAAI,CAACX,KAAS,CAC5B,CAAC;EACR,CAAC,CAEY,CAAC,EAChBG,KAAA;IAAIS,KAAK,EAAE;MAAEE,SAAS,EAAE;IAAS,CAAE;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,uBAAsBV,MAAM,CAACG,IAAI,IAAI,YAAa,OAAW,CAAC,EACnGC,KAAA,CAACV,MAAM;IAAC4B,QAAQ,EAAC,MAAM;IAACC,OAAO,EAAC,MAAM;IAACC,QAAQ,EAAC,OAAO;IAACC,OAAO,EAAGC,KAAK,IAAK;MAC3EA,KAAK,CAACC,cAAc,CAAC,CAAC;MACtB5B,iBAAiB,CAAC2B,KAAK,CAAC;IAC1B,CAAE;IAAArB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,YAAkB,CACV,CAAC;AAChB,CAAC;AAED,eAAeb,WAAW"},"metadata":{},"sourceType":"module"}