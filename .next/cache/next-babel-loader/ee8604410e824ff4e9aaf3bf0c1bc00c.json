{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farshadghazanfari/Documents/www/npat/components/Create.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { hri } from 'human-readable-ids';\nimport { Button, StyledInput, FlexColumn, FlexContainer } from './StyledComponents';\nimport { socket } from '../constants/websocket';\nvar FormContainer = styled.div.withConfig({\n  displayName: \"Create__FormContainer\",\n  componentId: \"sc-1xf6e0b-0\"\n})([\"padding:40px;padding-top:30px;display:flex;flex-direction:column;text-align:center;\"]);\nvar CheckBoxContainer = styled.div.withConfig({\n  displayName: \"Create__CheckBoxContainer\",\n  componentId: \"sc-1xf6e0b-1\"\n})([\"margin:0 20px 20px 0;\"]);\n\nvar Create = function Create(_ref) {\n  var cancel = _ref.cancel,\n      setGameData = _ref.setGameData,\n      setGamePlaying = _ref.setGamePlaying;\n\n  var _useState = useState(''),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState(\"5\"),\n      rounds = _useState2[0],\n      setRounds = _useState2[1];\n\n  var _useState3 = useState(\"ai\"),\n      scoringType = _useState3[0],\n      setScoringType = _useState3[1];\n\n  var _useState4 = useState({\n    Name: true,\n    Place: true,\n    Animal: true,\n    Thing: true,\n    Songs: false,\n    Movies: false,\n    \"TV shows\": false,\n    Fruits: false,\n    Vegetables: false,\n    Books: false,\n    Subjects: false,\n    Celebrities: false,\n    Musicians: false,\n    Instruments: false\n  }),\n      categories = _useState4[0],\n      setCategories = _useState4[1]; // Monzo easter egg\n\n\n  useEffect(function () {\n    if (name === \"Monzo\") {\n      setCategories(Object.assign({}, categories, {\n        \"Office Dog Breeds\": false,\n        \"Meeting Rooms\": false,\n        \"Badge Types\": false,\n        \"Activity Types\": false,\n        \"Engineers\": false,\n        \"Data Scientists\": false\n      }));\n    }\n  }, [name]);\n  var categoriesArray = Object.keys(categories);\n  var options = [\"5\", \"7\", \"10\"];\n  var gameData = {\n    name: name,\n    isAdmin: true\n  };\n\n  var handleCreateGame = function handleCreateGame(code) {\n    var cats = [];\n    categoriesArray.forEach(function (cat) {\n      if (categories[cat]) cats.push(cat);\n    });\n    socket.emit('create', {\n      name: name,\n      code: code,\n      rounds: rounds,\n      categories: cats,\n      scoringType: scoringType\n    }, function (_ref2) {\n      var error = _ref2.error,\n          users = _ref2.users;\n\n      if (error) {\n        alert(error);\n      } else {\n        gameData.code = code;\n        gameData.users = users;\n        gameData.maxRounds = Number(rounds);\n        gameData.categories = cats;\n        setGameData(gameData);\n        setGamePlaying(true);\n      }\n    });\n  };\n\n  var disabled = !name || !checkAtleastOneSelected(categoriesArray, categories);\n  return __jsx(FormContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, __jsx(FlexColumn, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Your Name:\"), __jsx(StyledInput, {\n    maxLength: \"15\",\n    name: \"name\",\n    type: \"text\",\n    onChange: function onChange(event) {\n      return setName(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  })), __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Select number of rounds:\"), __jsx(FlexContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, options.map(function (option) {\n    return __jsx(CheckBoxContainer, {\n      key: option,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 36\n      }\n    }, __jsx(\"input\", {\n      type: \"radio\",\n      id: option,\n      name: \"rounds\",\n      value: option,\n      onChange: function onChange(event) {\n        return setRounds(event.target.value);\n      },\n      checked: rounds === option,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }), __jsx(\"label\", {\n      htmlFor: option,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, option));\n  })), __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Select categories:\"), __jsx(FlexContainer, {\n    style: {\n      maxWidth: \"450px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, categoriesArray.map(function (cat) {\n    return __jsx(CheckBoxContainer, {\n      key: cat,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 41\n      }\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: cat,\n      name: \"categories\",\n      onChange: function onChange(event) {\n        setCategories(Object.assign({}, categories, _defineProperty({}, cat, event.target.checked)));\n      },\n      checked: categories[cat],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }), __jsx(\"label\", {\n      htmlFor: cat,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, cat));\n  })), __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Scoring Rules:\"), __jsx(FlexContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, __jsx(CheckBoxContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    id: \"cross\",\n    name: \"scoring\",\n    value: \"cross\",\n    onChange: function onChange(event) {\n      return setScoringType(event.target.value);\n    },\n    checked: scoringType === \"cross\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"cross\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, \"Score Each Other\")), __jsx(CheckBoxContainer, {\n    key: \"self\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    id: \"self\",\n    name: \"scoring\",\n    value: \"self\",\n    onChange: function onChange(event) {\n      return setScoringType(event.target.value);\n    },\n    checked: scoringType === \"self\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"self\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, \"Score Yourself\")), __jsx(CheckBoxContainer, {\n    key: \"ai\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    id: \"ai\",\n    name: \"scoring\",\n    value: \"ai\",\n    onChange: function onChange(event) {\n      return setScoringType(event.target.value);\n    },\n    checked: scoringType === \"ai\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"ai\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, \"Score by AI\"))), __jsx(Button, {\n    disabled: disabled,\n    fontSize: \"25px\",\n    padding: \"15px\",\n    minWidth: \"220px\",\n    onClick: function onClick(event) {\n      event.preventDefault();\n      var code = random(11);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, \"Create Room\")), __jsx(Button, {\n    fontSize: \"25px\",\n    padding: \"15px\",\n    minWidth: \"220px\",\n    onClick: function onClick() {\n      return cancel();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, \"Cancel\")));\n};\n\nvar checkAtleastOneSelected = function checkAtleastOneSelected(categoriesList, categories) {\n  var enableButton = false;\n  categoriesList.forEach(function (category) {\n    if (categories[category]) {\n      enableButton = true;\n    }\n  });\n  return enableButton;\n};\n\nexport default Create;","map":{"version":3,"sources":["/Users/farshadghazanfari/Documents/www/npat/components/Create.js"],"names":["React","useState","useEffect","styled","hri","Button","StyledInput","FlexColumn","FlexContainer","socket","FormContainer","div","CheckBoxContainer","Create","cancel","setGameData","setGamePlaying","name","setName","rounds","setRounds","scoringType","setScoringType","Name","Place","Animal","Thing","Songs","Movies","Fruits","Vegetables","Books","Subjects","Celebrities","Musicians","Instruments","categories","setCategories","Object","assign","categoriesArray","keys","options","gameData","isAdmin","handleCreateGame","code","cats","forEach","cat","push","emit","error","users","alert","maxRounds","Number","disabled","checkAtleastOneSelected","event","target","value","map","option","maxWidth","checked","preventDefault","random","categoriesList","enableButton","category"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { hri } from 'human-readable-ids';\n\nimport { Button, StyledInput, FlexColumn, FlexContainer } from './StyledComponents'\nimport { socket } from '../constants/websocket'\n\nconst FormContainer = styled.div`\n  padding: 40px;\n  padding-top: 30px;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n`\n\nconst CheckBoxContainer = styled.div`\n  margin: 0 20px 20px 0;\n`\n\nconst Create = ({ cancel, setGameData, setGamePlaying }) => {\n  const [name, setName] = useState('');\n  const [rounds, setRounds] = useState(\"5\");\n  const [scoringType, setScoringType] = useState(\"ai\");\n  const [categories, setCategories] = useState({\n    Name: true,\n    Place: true,\n    Animal: true,\n    Thing: true,\n    Songs: false,\n    Movies: false,\n    \"TV shows\": false,\n    Fruits: false,\n    Vegetables: false,\n    Books: false,\n    Subjects: false,\n    Celebrities: false,\n    Musicians: false,\n    Instruments: false\n  })\n\n  // Monzo easter egg\n  useEffect(() => {\n    if (name === \"Monzo\") {\n      setCategories(Object.assign({}, categories, {\n        \"Office Dog Breeds\": false,\n        \"Meeting Rooms\": false,\n        \"Badge Types\": false,\n        \"Activity Types\": false,\n        \"Engineers\": false,\n        \"Data Scientists\": false\n      }))\n    }\n\n  }, [name])\n\n  const categoriesArray = Object.keys(categories);\n\n  const options = [\"5\", \"7\", \"10\"]\n  const gameData = {\n    name, isAdmin: true\n  }\n\n  const handleCreateGame = (code) => {\n    let cats = [];\n    categoriesArray.forEach(cat => {\n      if (categories[cat]) cats.push(cat);\n    });\n\n    socket.emit('create', { name, code, rounds, categories: cats, scoringType }, ({ error, users }) => {\n      if (error) {\n         \n        alert(error);\n      } else {\n        gameData.code = code;\n        gameData.users = users;\n        gameData.maxRounds = Number(rounds);\n        gameData.categories = cats;\n        setGameData(gameData)\n        setGamePlaying(true)\n      }\n    });\n  }\n\n  let disabled = !name || !checkAtleastOneSelected(categoriesArray, categories)\n\n  return (\n    <FormContainer>\n      <form>\n        <FlexColumn>\n          <p>\n            <label htmlFor=\"name\">Your Name:</label>\n            <StyledInput maxLength=\"15\" name=\"name\" type=\"text\" onChange={(event) => setName(event.target.value)} />\n          </p>\n          <h2>Select number of rounds:</h2>\n          <FlexContainer>\n            {options.map(option => <CheckBoxContainer key={option}>\n              <input type=\"radio\" id={option} name=\"rounds\" value={option} onChange={(event) => setRounds(event.target.value)} checked={rounds === option} />\n              <label htmlFor={option}>{option}</label>\n            </CheckBoxContainer>)}\n          </FlexContainer>\n          <h2>Select categories:</h2>\n          <FlexContainer style={{ maxWidth: \"450px\" }}>\n            {categoriesArray.map(cat => <CheckBoxContainer key={cat}>\n              <input type=\"checkbox\" id={cat} name=\"categories\" onChange={(event) => {\n                setCategories(Object.assign({}, categories, { [cat]: event.target.checked }))\n              }} checked={categories[cat]} />\n              <label htmlFor={cat}>{cat}</label>\n            </CheckBoxContainer>)}\n          </FlexContainer>\n          <h2>Scoring Rules:</h2>\n          <FlexContainer>\n            <CheckBoxContainer>\n              <input type=\"radio\" id=\"cross\" name=\"scoring\" value=\"cross\" onChange={(event) => setScoringType(event.target.value)} checked={scoringType === \"cross\"} />\n              <label htmlFor=\"cross\">Score Each Other</label>\n            </CheckBoxContainer>\n            <CheckBoxContainer key=\"self\">\n              <input type=\"radio\" id=\"self\" name=\"scoring\" value=\"self\" onChange={(event) => setScoringType(event.target.value)} checked={scoringType === \"self\"} />\n              <label htmlFor=\"self\">Score Yourself</label>\n            </CheckBoxContainer>\n            <CheckBoxContainer key=\"ai\">\n              <input type=\"radio\" id=\"ai\" name=\"scoring\" value=\"ai\" onChange={(event) => setScoringType(event.target.value)} checked={scoringType === \"ai\"} />\n              <label htmlFor=\"ai\">Score by AI</label>\n            </CheckBoxContainer>\n\n          </FlexContainer>\n          <Button disabled={disabled} fontSize=\"25px\" padding=\"15px\" minWidth=\"220px\" onClick={(event) => {\n\n            event.preventDefault()\n            let code =random(11);\n          }}>Create Room</Button>\n        </FlexColumn>\n        <Button fontSize=\"25px\" padding=\"15px\" minWidth=\"220px\" onClick={() => cancel()}>Cancel</Button>\n      </form>\n    </FormContainer>\n  )\n}\n\n\nconst checkAtleastOneSelected = (categoriesList, categories) => {\n  let enableButton = false;\n  categoriesList.forEach(category => {\n    if (categories[category]) {\n      enableButton = true;\n    }\n  })\n  return enableButton\n}\n\nexport default Create"]},"metadata":{},"sourceType":"module"}