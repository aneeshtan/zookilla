{"ast":null,"code":"var _jsxFileName = \"/Users/farshadghazanfari/Documents/www/npat/components/Game/FinalScreen.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { avatars } from '../../constants/theme';\nimport { Button, FlexContainer, FlexColumn } from '../StyledComponents';\n\nconst FinalScreen = ({\n  scores,\n  handleRestartGame\n}) => {\n  let winner = {\n    score: 0\n  };\n  scores.forEach(score => {\n    if (score.score > winner.score) winner = {\n      score: score.score,\n      name: score.name\n    };\n  });\n  return __jsx(FlexColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, \"Final Scores\"), __jsx(FlexContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, scores.map(user => {\n    return __jsx(\"div\", {\n      style: {\n        margin: \"0 20px\",\n        textAlign: \"center\"\n      },\n      key: user.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 16\n      }\n    }, __jsx(\"img\", {\n      alt: `${user.name} avatar`,\n      src: avatars[user.avatarId],\n      width: 60,\n      height: 60,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, user.name, \": \", user.score));\n  })), __jsx(\"h2\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, `🎉🎉 The winner is: ${winner.name || 'No winner!'} 🎉🎉`), __jsx(Button, {\n    fontSize: \"25px\",\n    padding: \"15px\",\n    minWidth: \"220px\",\n    onClick: event => {\n      gtag('event', 'play_again');\n      event.preventDefault();\n      handleRestartGame(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 6\n    }\n  }, \"Play Again\"));\n};\n\nexport default FinalScreen;","map":{"version":3,"sources":["/Users/farshadghazanfari/Documents/www/npat/components/Game/FinalScreen.js"],"names":["React","avatars","Button","FlexContainer","FlexColumn","FinalScreen","scores","handleRestartGame","winner","score","forEach","name","map","user","margin","textAlign","avatarId","event","gtag","preventDefault"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,MAAT,EAAiBC,aAAjB,EAAgCC,UAAhC,QAAkD,qBAAlD;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAmC;AACrD,MAAIC,MAAM,GAAG;AACXC,IAAAA,KAAK,EAAE;AADI,GAAb;AAGAH,EAAAA,MAAM,CAACI,OAAP,CAAeD,KAAK,IAAI;AACtB,QAAIA,KAAK,CAACA,KAAN,GAAcD,MAAM,CAACC,KAAzB,EAAgCD,MAAM,GAAG;AACvCC,MAAAA,KAAK,EAAEA,KAAK,CAACA,KAD0B;AAEvCE,MAAAA,IAAI,EAAEF,KAAK,CAACE;AAF2B,KAAT;AAIjC,GALD;AAQA,SAAO,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADK,EAEL,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,MAAM,CAACM,GAAP,CAAWC,IAAI,IAAI;AAClB,WAAO;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,QAAV;AAAoBC,QAAAA,SAAS,EAAE;AAA/B,OAAZ;AAAuD,MAAA,GAAG,EAAEF,IAAI,CAACF,IAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL;AAAK,MAAA,GAAG,EAAG,GAAEE,IAAI,CAACF,IAAK,SAAvB;AAAiC,MAAA,GAAG,EAAEV,OAAO,CAACY,IAAI,CAACG,QAAN,CAA7C;AAA8D,MAAA,KAAK,EAAE,EAArE;AAAyE,MAAA,MAAM,EAAE,EAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,EAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,IAAI,CAACF,IAAT,QAAiBE,IAAI,CAACJ,KAAtB,CAFK,CAAP;AAID,GALA,CADH,CAFK,EAWL;AAAI,IAAA,KAAK,EAAE;AAAEM,MAAAA,SAAS,EAAE;AAAb,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsC,uBAAsBP,MAAM,CAACG,IAAP,IAAe,YAAa,OAAxF,CAXK,EAYJ,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,MAAjB;AAAwB,IAAA,OAAO,EAAC,MAAhC;AAAuC,IAAA,QAAQ,EAAC,OAAhD;AAAwD,IAAA,OAAO,EAAGM,KAAD,IAAW;AAC3EC,MAAAA,IAAI,CAAC,OAAD,EAAU,YAAV,CAAJ;AACAD,MAAAA,KAAK,CAACE,cAAN;AACAZ,MAAAA,iBAAiB,CAACU,KAAD,CAAjB;AACD,KAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZI,CAAP;AAkBD,CA9BD;;AAgCA,eAAeZ,WAAf","sourcesContent":["import React from 'react';\n\nimport { avatars } from '../../constants/theme'\nimport { Button, FlexContainer, FlexColumn } from '../StyledComponents'\n\nconst FinalScreen = ({ scores, handleRestartGame }) => {\n  let winner = {\n    score: 0,\n  };\n  scores.forEach(score => {\n    if (score.score > winner.score) winner = {\n      score: score.score,\n      name: score.name\n    }\n  })\n\n\n  return <FlexColumn>\n    <h2>Final Scores</h2>\n    <FlexContainer>\n      {scores.map(user => {\n        return <div style={{ margin: \"0 20px\", textAlign: \"center\" }} key={user.name}>\n          <img alt={`${user.name} avatar`} src={avatars[user.avatarId]} width={60} height={60} />\n          <p>{user.name}: {user.score}</p>\n        </div>\n      })\n      }\n    </FlexContainer>\n    <h2 style={{ textAlign: \"center\" }}>{`🎉🎉 The winner is: ${winner.name || 'No winner!'} 🎉🎉`}</h2>\n    {<Button fontSize=\"25px\" padding=\"15px\" minWidth=\"220px\" onClick={(event) => {\n      gtag('event', 'play_again');\n      event.preventDefault()\n      handleRestartGame(event)\n    }}>Play Again</Button>}\n  </FlexColumn >\n}\n\nexport default FinalScreen"]},"metadata":{},"sourceType":"module"}