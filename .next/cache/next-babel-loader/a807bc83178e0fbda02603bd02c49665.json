{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farshadghazanfari/Documents/www/npat/components/Game/ResultsTable.js\";\n\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Button, Spinner, FlexColumn, FlexContainer } from '../StyledComponents';\nimport theme from '../../constants/theme';\nimport { socket } from '../../constants/websocket';\nvar TableContainer = styled.div.withConfig({\n  displayName: \"ResultsTable__TableContainer\",\n  componentId: \"sc-1lg56mx-0\"\n})([\"display:flex;flex-wrap:wrap;justify-content:space-around;\"]);\nvar Container = styled.div.withConfig({\n  displayName: \"ResultsTable__Container\",\n  componentId: \"sc-1lg56mx-1\"\n})([\"padding:20px 0;display:flex;flex-direction:row;justify-content:center;flex-wrap:wrap;\"]);\nvar Paper = styled.div.withConfig({\n  displayName: \"ResultsTable__Paper\",\n  componentId: \"sc-1lg56mx-2\"\n})([\"background:white;background-size:100% 1.2em;height:auto;margin:0 auto;margin-top:30px;box-shadow:#9e9e9e63 6px 7px 14px 0px;width:250px;padding:30px 30px 30px 30px;background-image:linear-gradient(90deg,transparent 49px,transparent 49px,transparent 51px,transparent 51px),linear-gradient(#eee .1em,transparent .1em);\"]);\nvar Submission = styled.span.withConfig({\n  displayName: \"ResultsTable__Submission\",\n  componentId: \"sc-1lg56mx-3\"\n})([\"color:\", \";word-break:break-all;\"], theme.colors.blue);\nvar StyledIncrementButton = styled.button.withConfig({\n  displayName: \"ResultsTable__StyledIncrementButton\",\n  componentId: \"sc-1lg56mx-4\"\n})([\"font-weight:bold;font-size:14px;border:\", \";color:\", \";cursor:\", \";\"], function (props) {\n  return props.disabled ? '1px solid gray' : '1px solid black';\n}, function (props) {\n  return props.disabled ? 'gray' : 'black';\n}, function (props) {\n  return props.disabled ? 'not-allowed' : 'pointer';\n});\nvar InputContainer = styled.div.withConfig({\n  displayName: \"ResultsTable__InputContainer\",\n  componentId: \"sc-1lg56mx-5\"\n})([\"margin-left:15px;font-size:1.5em;display:flex;align-items:center;width:80px;justify-content:space-between;\"]);\nvar NumberContainer = styled.div.withConfig({\n  displayName: \"ResultsTable__NumberContainer\",\n  componentId: \"sc-1lg56mx-6\"\n})([\"margin-left:15px;font-size:1.5em;display:flex;align-items:center;width:80px;justify-content:center;\"]);\n\nvar ResultsTable = function ResultsTable(_ref) {\n  var gameState = _ref.gameState,\n      round = _ref.round,\n      handleSubmitScore = _ref.handleSubmitScore,\n      scoreSubmitted = _ref.scoreSubmitted,\n      scorePartner = _ref.scorePartner;\n  var initialScore = {};\n  var categories = gameState.categories;\n  var scoringId = gameState.scoringType === \"cross\" ? scorePartner.id : socket.id; // sort users so the person being score always comes first\n\n  var users = sortUserList(_toConsumableArray(gameState.users), scoringId);\n  users.forEach(function (user) {\n    categories.forEach(function (cat) {\n      var similar = similarityCheck(cat, users, user.id, round);\n\n      if (user.id === scoringId && similar.value) {\n        initialScore = Object.assign({}, initialScore, _defineProperty({}, cat, 5));\n      }\n    });\n  });\n\n  var _useState = useState(initialScore),\n      currentScore = _useState[0],\n      setCurrentScore = _useState[1]; // Function to call the API and get the score\n\n\n  var getScoreFromAPI = function getScoreFromAPI(category, answer) {\n    var response, data;\n    return _regeneratorRuntime.async(function getScoreFromAPI$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"/api/check-answer\", {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                category: category,\n                answer: answer\n              })\n            }));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data.isCorrect ? 1 : 0);\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(\"Error checking answer:\", _context.t0);\n            return _context.abrupt(\"return\", 0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  }; // Modify the scoring logic\n\n\n  var handleScoring = function handleScoring() {\n    var newScores, _iterator, _step, category, answer, score;\n\n    return _regeneratorRuntime.async(function handleScoring$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            newScores = _objectSpread({}, currentScore);\n            _iterator = _createForOfIteratorHelper(categories);\n            _context2.prev = 2;\n\n            _iterator.s();\n\n          case 4:\n            if ((_step = _iterator.n()).done) {\n              _context2.next = 13;\n              break;\n            }\n\n            category = _step.value;\n            answer = getUserResponse(category); // Function to get user's response\n\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(getScoreFromAPI(category, answer));\n\n          case 9:\n            score = _context2.sent;\n            newScores[category] = score;\n\n          case 11:\n            _context2.next = 4;\n            break;\n\n          case 13:\n            _context2.next = 18;\n            break;\n\n          case 15:\n            _context2.prev = 15;\n            _context2.t0 = _context2[\"catch\"](2);\n\n            _iterator.e(_context2.t0);\n\n          case 18:\n            _context2.prev = 18;\n\n            _iterator.f();\n\n            return _context2.finish(18);\n\n          case 21:\n            setCurrentScore(newScores);\n\n          case 22:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[2, 15, 18, 21]], Promise);\n  };\n\n  var totalScore = 0;\n  useEffect(function () {\n    totalScore = sumAllScores(currentScore);\n  }, [currentScore]);\n\n  if (gameState.scoringType === \"ai\") {\n    __jsx(TableContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 3\n      }\n    }, gameState.users.map(function (user) {\n      return __jsx(Paper, {\n        key: user.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 5\n        }\n      }, __jsx(\"h2\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }\n      }, user.name), gameState.categories.map(function (category) {\n        return __jsx(\"div\", {\n          key: category,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 9\n          }\n        }, category, \": \", __jsx(Submission, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 23\n          }\n        }, user.responses[round][category] || '-'), __jsx(\"span\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 11\n          }\n        }, \"Score: \", scores[user.id] && scores[user.id][category]));\n      }), __jsx(\"h2\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 7\n        }\n      }, \"Total Score: \", Object.values(scores[user.id] || {}).reduce(function (a, b) {\n        return a + b;\n      }, 0)));\n    }));\n  } else {\n    return __jsx(React.Fragment, null, gameState.scoringType === \"cross\" ? __jsx(FlexContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 42\n      }\n    }, __jsx(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 57\n      }\n    }, \"You are scoring for \", __jsx(Submission, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 81\n      }\n    }, scorePartner.name), \"!\")) : false, __jsx(TableContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 5\n      }\n    }, users.map(function (user) {\n      return __jsx(Paper, {\n        key: user.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 26\n        }\n      }, __jsx(\"h2\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      }, __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 74\n        }\n      }, user.name), user.id === scoringId ? __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 36\n        }\n      }, \"Score\") : false), categories.map(function (category) {\n        var similar = similarityCheck(category, users, user.id, round);\n        var selfScoreCard = user.id === scoringId;\n        return __jsx(React.Fragment, {\n          key: category,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 18\n          }\n        }, similar.value && selfScoreCard ? __jsx(\"span\", {\n          style: {\n            color: theme.colors.red\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 47\n          }\n        }, scorePartner.name || 'You', \" and \", similar.name, \" put down the same word for \", category) : false, __jsx(\"div\", {\n          style: {\n            marginBottom: '10px',\n            display: \"flex\",\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          key: category,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }\n        }, __jsx(\"div\", {\n          style: {\n            width: selfScoreCard ? \"150px\" : \"auto\",\n            fontSize: \"1.2em\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }\n        }, category, \":\", \"  \", \" \", __jsx(Submission, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 35\n          }\n        }, user.responses[round][category] || '-')), selfScoreCard ? user.responses[round][category] ? __jsx(InputContainer, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 51\n          }\n        }, __jsx(NumberInput, {\n          category: category,\n          setCurrentScore: setCurrentScore,\n          currentScore: currentScore,\n          value: similar.value ? 5 : 0,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 19\n          }\n        }), \" \") : __jsx(NumberContainer, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 167\n          }\n        }, \"0\") : ''));\n      }), user.id === scoringId ? __jsx(\"h2\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 34\n        }\n      }, \"Total Score: \".concat(sumAllScores(currentScore))) : false);\n    })), __jsx(Container, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 5\n      }\n    }, !scoreSubmitted ? __jsx(React.Fragment, null, __jsx(Button, {\n      onClick: function onClick(event) {\n        event.preventDefault();\n        handleSubmitScore(totalScore, scoringId);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }, \"Submit\")) : __jsx(FlexColumn, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, __jsx(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }, \"Waiting for others\"), __jsx(Spinner, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }))));\n  }\n};\n\nvar similarityCheck = function similarityCheck(category, users, currentUserId, round) {\n  var currentUser = users.find(function (user) {\n    return user.id === currentUserId;\n  });\n  var currentUserResponse = currentUser.responses[round][category] ? currentUser.responses[round][category].toLowerCase().trim() : null;\n  var value = false;\n  var name = null;\n  users.filter(function (user) {\n    return user.id !== currentUserId;\n  }).forEach(function (user) {\n    var otherResponse = user.responses[round][category] ? user.responses[round][category].toLowerCase().trim() : null;\n\n    if (currentUserResponse && otherResponse && currentUserResponse === otherResponse) {\n      value = true;\n      name = user.name;\n    }\n\n    return;\n  });\n  return {\n    value: value,\n    name: name\n  };\n};\n\nvar sumAllScores = function sumAllScores(scores) {\n  return Object.keys(scores).map(function (cat) {\n    return scores[cat];\n  }).reduce(function (a, b) {\n    return a + b;\n  }, 0);\n};\n\nvar NumberInput = function NumberInput(_ref2) {\n  var value = _ref2.value,\n      currentScore = _ref2.currentScore,\n      setCurrentScore = _ref2.setCurrentScore,\n      category = _ref2.category;\n\n  var _useState2 = useState(value),\n      numberValue = _useState2[0],\n      setNumberValue = _useState2[1];\n\n  useEffect(function () {\n    setCurrentScore(Object.assign({}, currentScore, _defineProperty({}, category, value)));\n  }, []);\n\n  var onMinus = function onMinus() {\n    setCurrentScore(Object.assign({}, currentScore, _defineProperty({}, category, numberValue - 5)));\n    if (!(numberValue <= 0)) setNumberValue(numberValue - 5);\n  };\n\n  var onPlus = function onPlus() {\n    setCurrentScore(Object.assign({}, currentScore, _defineProperty({}, category, numberValue + 5)));\n    if (!(numberValue >= 10)) setNumberValue(numberValue + 5);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(StyledIncrementButton, {\n    disabled: numberValue === 0,\n    onClick: function onClick() {\n      return onMinus();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 12\n    }\n  }, \"-\"), numberValue, __jsx(StyledIncrementButton, {\n    disabled: numberValue === 10,\n    onClick: function onClick() {\n      return onPlus();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 128\n    }\n  }, \"+\"));\n};\n\nvar sortUserList = function sortUserList(users, scoringId) {\n  var index = users.findIndex(function (user) {\n    return user.id === scoringId;\n  });\n\n  if (index != -1) {\n    var first = users.splice(index, 1)[0];\n    users.unshift(first);\n    return users;\n  }\n\n  return users;\n};\n\nexport default ResultsTable;","map":{"version":3,"sources":["/Users/farshadghazanfari/Documents/www/npat/components/Game/ResultsTable.js"],"names":["React","useState","useEffect","styled","Button","Spinner","FlexColumn","FlexContainer","theme","socket","TableContainer","div","Container","Paper","Submission","span","colors","blue","StyledIncrementButton","button","props","disabled","InputContainer","NumberContainer","ResultsTable","gameState","round","handleSubmitScore","scoreSubmitted","scorePartner","initialScore","categories","scoringId","scoringType","id","users","sortUserList","forEach","user","cat","similar","similarityCheck","value","Object","assign","currentScore","setCurrentScore","getScoreFromAPI","category","answer","fetch","method","headers","body","JSON","stringify","response","json","data","isCorrect","console","error","handleScoring","newScores","getUserResponse","score","totalScore","sumAllScores","map","name","responses","scores","values","reduce","a","b","display","justifyContent","selfScoreCard","color","red","marginBottom","alignItems","width","fontSize","event","preventDefault","currentUserId","currentUser","find","currentUserResponse","toLowerCase","trim","filter","otherResponse","keys","NumberInput","numberValue","setNumberValue","onMinus","onPlus","index","findIndex","first","splice","unshift"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Button, Spinner, FlexColumn, FlexContainer } from '../StyledComponents'\nimport theme from '../../constants/theme'\nimport { socket } from '../../constants/websocket'\n\nconst TableContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`\n\nconst Container = styled.div`\n  padding: 20px 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  flex-wrap: wrap;\n`\n\nconst Paper = styled.div`\n  background: white;\n  background-size: 100% 1.2em;\n  height: auto;\n  margin: 0 auto;\n  margin-top: 30px;\n  box-shadow: #9e9e9e63 6px 7px 14px 0px;\n  width: 250px;\n  padding: 30px 30px 30px 30px;\n  background-image:\n  linear-gradient(90deg, transparent 49px, transparent 49px, transparent 51px, transparent 51px),\n  linear-gradient(#eee .1em, transparent .1em);\n`\n\nconst Submission = styled.span`\n  color: ${theme.colors.blue};\n  word-break: break-all;\n`\n\nconst StyledIncrementButton = styled.button`\n  font-weight: bold;\n  font-size: 14px;\n  border: ${props => props.disabled ? '1px solid gray' : '1px solid black'};\n  color: ${props => props.disabled ? 'gray' : 'black'};\n  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n`\n\nconst InputContainer = styled.div`\n  margin-left: 15px;\n  font-size: 1.5em;\n  display: flex;\n  align-items: center;\n  width: 80px;\n  justify-content: space-between;\n`\n\nconst NumberContainer = styled.div`\n  margin-left: 15px;\n  font-size: 1.5em;\n  display: flex;\n  align-items: center;\n  width: 80px;\n  justify-content: center;\n`\n\nconst ResultsTable = ({ gameState, round, handleSubmitScore, scoreSubmitted, scorePartner }) => {\n  let initialScore = {}\n  const categories = gameState.categories;\n\n  let scoringId = gameState.scoringType === \"cross\" ? scorePartner.id : socket.id\n  // sort users so the person being score always comes first\n  let users = sortUserList([...gameState.users], scoringId)\n\n  users.forEach(user => {\n    categories.forEach(cat => {\n      let similar = similarityCheck(cat, users, user.id, round)\n      if (user.id === scoringId && similar.value) {\n\n        initialScore = Object.assign({}, initialScore, { [cat]: 5 })\n      }\n    })\n  })\n\n  const [currentScore, setCurrentScore] = useState(initialScore);\n\n  // Function to call the API and get the score\nconst getScoreFromAPI = async (category, answer) => {\n  try {\n    const response = await fetch(`/api/check-answer`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ category, answer }),\n    });\n    const data = await response.json();\n    return data.isCorrect ? 1 : 0; // Assuming 1 point for correct answer, 0 for incorrect\n  } catch (error) {\n    console.error(\"Error checking answer:\", error);\n    return 0; // Handle error appropriately\n  }\n};\n\n// Modify the scoring logic\nconst handleScoring = async () => {\n  let newScores = {...currentScore};\n\n  for (const category of categories) {\n    const answer = getUserResponse(category); // Function to get user's response\n    const score = await getScoreFromAPI(category, answer);\n    newScores[category] = score;\n  }\n\n  setCurrentScore(newScores);\n};\n\n  let totalScore = 0;\n  useEffect(() => {\n    totalScore = sumAllScores(currentScore)\n  }, [currentScore])\n\nif(gameState.scoringType === \"ai\"){\n  <TableContainer>\n  {gameState.users.map(user => (\n    <Paper key={user.id}>\n      <h2>{user.name}</h2>\n      {gameState.categories.map(category => (\n        <div key={category}>\n          {category}: <Submission>{user.responses[round][category] || '-'}</Submission>\n          <span>Score: {scores[user.id] && scores[user.id][category]}</span>\n        </div>\n      ))}\n      <h2>Total Score: {Object.values(scores[user.id] || {}).reduce((a, b) => a + b, 0)}</h2>\n    </Paper>\n  ))}\n</TableContainer>\n}else{\n \n  return <>\n    {gameState.scoringType === \"cross\" ? <FlexContainer><h1>You are scoring for <Submission>{scorePartner.name}</Submission>!</h1></FlexContainer> : false}\n    <TableContainer>\n      {users.map(user => <Paper key={user.id}>\n        <h2 style={{ display: 'flex', justifyContent: 'space-between' }}><span>{user.name}</span>\n          {user.id === scoringId ? <span>Score</span> : false}\n        </h2>\n        {categories.map(category => {\n          let similar = similarityCheck(category, users, user.id, round)\n          let selfScoreCard = user.id === scoringId;\n          return <React.Fragment key={category}>\n            {similar.value && selfScoreCard ? <span style={{ color: theme.colors.red }}>{scorePartner.name || 'You'} and {similar.name} put down the same word for {category}</span> : false}\n            <div style={{ marginBottom: '10px', display: \"flex\", justifyContent: 'space-between', alignItems: 'center' }} key={category}>\n              <div style={{ width: selfScoreCard ? \"150px\" : \"auto\", fontSize: \"1.2em\" }}>\n                {category}:{`  `} <Submission>{user.responses[round][category] || '-'}</Submission>\n              </div>\n              {selfScoreCard ?\n                user.responses[round][category] ? <InputContainer>\n                  <NumberInput category={category} setCurrentScore={setCurrentScore} currentScore={currentScore} value={similar.value ? 5 : 0} /> </InputContainer> : <NumberContainer>0</NumberContainer>\n                : ''}\n            </div>\n          </React.Fragment>\n        }\n        )}\n        {user.id === scoringId ? <h2>{`Total Score: ${sumAllScores(currentScore)}`}</h2> : false}\n      </Paper>)}\n    </TableContainer>\n    <Container>\n      {!scoreSubmitted ? <>\n        <Button onClick={(event) => {\n          event.preventDefault()\n          handleSubmitScore(totalScore, scoringId)\n        }}>Submit</Button>\n      </> : <FlexColumn>\n          <h2>Waiting for others</h2>\n          <Spinner />\n        </FlexColumn>}\n    </Container>\n  </>\n  }\n}\n\nconst similarityCheck = (category, users, currentUserId, round) => {\n  let currentUser = users.find(user => user.id === currentUserId);\n  let currentUserResponse = currentUser.responses[round][category] ? currentUser.responses[round][category].toLowerCase().trim() : null;\n\n  let value = false;\n  let name = null;\n  users.filter(user => user.id !== currentUserId).forEach(user => {\n    let otherResponse = user.responses[round][category] ? user.responses[round][category].toLowerCase().trim() : null;\n    if (currentUserResponse && otherResponse && (currentUserResponse === otherResponse)) {\n      value = true;\n      name = user.name\n    }\n    return;\n  })\n  return { value, name };\n}\n\nconst sumAllScores = (scores) => Object.keys(scores).map(cat => scores[cat]).reduce((a, b) => a + b, 0)\n\nconst NumberInput = ({ value, currentScore, setCurrentScore, category }) => {\n  const [numberValue, setNumberValue] = useState(value)\n  useEffect(() => {\n    setCurrentScore(Object.assign({}, currentScore, { [category]: value }))\n  }, [])\n\n  const onMinus = () => {\n    setCurrentScore(Object.assign({}, currentScore, { [category]: numberValue - 5 }))\n    if (!(numberValue <= 0)) setNumberValue(numberValue - 5)\n  }\n\n  const onPlus = () => {\n    setCurrentScore(Object.assign({}, currentScore, { [category]: numberValue + 5 }))\n    if (!(numberValue >= 10)) setNumberValue(numberValue + 5)\n  }\n  return <><StyledIncrementButton disabled={numberValue === 0} onClick={() => onMinus()}>-</StyledIncrementButton>{numberValue}<StyledIncrementButton disabled={numberValue === 10} onClick={() => onPlus()}>+</StyledIncrementButton></>\n}\n\n\nconst sortUserList = (users, scoringId) => {\n  let index = users.findIndex(user => user.id === scoringId);\n  if (index != -1) {\n    let first = users.splice(index, 1)[0];\n    users.unshift(first);\n    return users;\n  }\n  return users\n}\n\n\nexport default ResultsTable;"]},"metadata":{},"sourceType":"module"}