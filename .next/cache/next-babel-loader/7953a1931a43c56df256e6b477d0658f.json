{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/farshadghazanfari/Documents/www/npat/components/Game/GameHeader.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nvar Container = styled.div.withConfig({\n  displayName: \"GameHeader__Container\",\n  componentId: \"sc-1k9cj4g-0\"\n})([\"width:100%;display:flex;flex-direction:row;justify-content:space-around;font-size:15px;@media(max-width:500px){}\"]);\nvar TimerValue = styled.span.withConfig({\n  displayName: \"GameHeader__TimerValue\",\n  componentId: \"sc-1k9cj4g-1\"\n})([\"position:relative;top:48px;\"]);\nvar TimerContainer = styled.div.withConfig({\n  displayName: \"GameHeader__TimerContainer\",\n  componentId: \"sc-1k9cj4g-2\"\n})([\"background-image:url('/assets/timer.png');height:100px;background-size:100px;width:100px;text-align:center;font-size:1.3em;\"]);\nvar RoundContainer = styled.div.withConfig({\n  displayName: \"GameHeader__RoundContainer\",\n  componentId: \"sc-1k9cj4g-3\"\n})([\"font-size:1.8em;position:relative;top:30px;@media(max-width:500px){font-size:1em;}display:flex;flex-direction:column;\"]);\nvar BoldContent = styled.span.withConfig({\n  displayName: \"GameHeader__BoldContent\",\n  componentId: \"sc-1k9cj4g-4\"\n})([\"color:red;font-weight:bold;font-size:1.2em;\"]);\nvar tickingSound;\n\nvar GameHeader = function GameHeader(_ref) {\n  var roundNumber = _ref.roundNumber,\n      timerValue = _ref.timerValue,\n      currentAlphabet = _ref.currentAlphabet,\n      maxRounds = _ref.maxRounds,\n      soundOn = _ref.soundOn;\n  useEffect(function () {\n    tickingSound = new Audio('/assets/audio/ticking-timer.wav');\n    tickingSound.load();\n    return function cleanup() {\n      pauseAudio(tickingSound);\n    };\n  }, []);\n\n  if (tickingSound && timerValue === 49 && soundOn) {\n    playAudio(tickingSound);\n  }\n\n  if (!soundOn || timerValue === 60) {\n    pauseAudio(tickingSound);\n  }\n\n  return __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 10\n    }\n  }, __jsx(RoundContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Round \", __jsx(BoldContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }\n  }, \"#\".concat(roundNumber, \"/\").concat(maxRounds))), __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"Current Alphabet: \", __jsx(BoldContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 31\n    }\n  }, currentAlphabet || 'Not Selected'))), __jsx(TimerContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, __jsx(TimerValue, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, timerValue)));\n};\n\nvar playAudio = function playAudio(audio) {\n  var audioPromise = audio.play();\n\n  if (audioPromise !== undefined) {\n    audioPromise.then(function (_) {// autoplay started\n    })[\"catch\"](function (err) {\n      // catch dom exception\n      console.info(err);\n    });\n  }\n};\n\nvar pauseAudio = function pauseAudio(audio) {\n  var audioPromise = audio.pause();\n\n  if (audioPromise !== undefined) {\n    audioPromise.then(function (_) {\n      audio.load();\n    })[\"catch\"](function (err) {\n      // catch dom exception\n      console.info(err);\n    });\n  }\n};\n\nexport default GameHeader;","map":{"version":3,"sources":["/Users/farshadghazanfari/Documents/www/npat/components/Game/GameHeader.js"],"names":["React","useEffect","styled","Container","div","TimerValue","span","TimerContainer","RoundContainer","BoldContent","tickingSound","GameHeader","roundNumber","timerValue","currentAlphabet","maxRounds","soundOn","Audio","load","cleanup","pauseAudio","playAudio","audio","audioPromise","play","undefined","then","_","err","console","info","pause"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  font-size: 15px;\n  @media(max-width: 500px) {\n\n  }\n`\n\nconst TimerValue = styled.span`\n  position: relative;\n  top: 48px;\n`\n\nconst TimerContainer = styled.div`\n  background-image: url('/assets/timer.png');\n  height: 100px;\n  background-size: 100px;\n  width: 100px;\n  text-align: center;\n  font-size: 1.3em;\n`\n\nconst RoundContainer = styled.div`\n  font-size: 1.8em;\n  position: relative;\n  top: 30px;\n  @media(max-width: 500px) {\n    font-size: 1em;\n  }\n  display: flex;\n  flex-direction: column;\n`\n\nconst BoldContent = styled.span`\n  color: red;\n  font-weight: bold;\n  font-size: 1.2em;\n`\n\nlet tickingSound;\n\nconst GameHeader = ({ roundNumber, timerValue, currentAlphabet, maxRounds, soundOn }) => {\n  useEffect(() => {\n    tickingSound = new Audio('/assets/audio/ticking-timer.wav');\n\n    tickingSound.load()\n    return function cleanup() {\n      pauseAudio(tickingSound)\n    };\n  }, []);\n\n  if (tickingSound && timerValue === 49 && soundOn) {\n    playAudio(tickingSound)\n  }\n\n  if (!soundOn || timerValue === 60) {\n    pauseAudio(tickingSound)\n  }\n\n  return <Container>\n    <RoundContainer>\n      <span>Round <BoldContent>{`#${roundNumber}/${maxRounds}`}</BoldContent></span>\n      <span>Current Alphabet: <BoldContent>{currentAlphabet || 'Not Selected'}</BoldContent></span>\n    </RoundContainer>\n    <TimerContainer><TimerValue>{timerValue}</TimerValue></TimerContainer>\n  </Container>\n}\n\nconst playAudio = (audio) => {\n  const audioPromise = audio.play()\n  if (audioPromise !== undefined) {\n    audioPromise\n      .then(_ => {\n        // autoplay started\n      })\n      .catch(err => {\n        // catch dom exception\n        console.info(err)\n      })\n  }\n}\n\nconst pauseAudio = (audio) => {\n  const audioPromise = audio.pause()\n  if (audioPromise !== undefined) {\n    audioPromise\n      .then(_ => {\n        audio.load()\n      })\n      .catch(err => {\n        // catch dom exception\n        console.info(err)\n      })\n  }\n}\n\nexport default GameHeader;"]},"metadata":{},"sourceType":"module"}