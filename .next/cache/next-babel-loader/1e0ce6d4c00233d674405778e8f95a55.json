{"ast":null,"code":"var _jsxFileName = \"/Users/farshadghazanfari/Documents/www/npat/components/Landing.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Join from './Join';\nimport Create from './Create';\nimport Play from './Game/Play';\nimport Instructions from './Instructions';\nimport { HelpIcon } from './Game/GameHeader'; // Adjust the path as per your folder structure\n\nconst StyledLanding = styled.div`\n  background-image: url('/assets/stopthebus.jpg'); // Replace with the correct path\n  background-size: cover;\n  background-repeat: no-repeat;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\nconst Button = styled.button`\n  background-color: #007bff;\n  border: none;\n  color: white;\n  padding: 10px 20px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin: 10px;\n  cursor: pointer;\n  border-radius: 5px;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n\nconst Landing = () => {\n  const {\n    0: showJoinForm,\n    1: toggleJoinForm\n  } = useState(false);\n  const {\n    0: showCreateForm,\n    1: toggleCreateForm\n  } = useState(false);\n  const {\n    0: showInstructions,\n    1: toggleInstructions\n  } = useState(false);\n  const {\n    0: isGamePlaying,\n    1: setGamePlaying\n  } = useState(false);\n  const {\n    0: gameData,\n    1: setGameData\n  } = useState({});\n  const {\n    0: soundOn,\n    1: toggleSound\n  } = useState(true);\n  return __jsx(StyledLanding, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"text-center mt-5 mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), isGamePlaying ? __jsx(Play, {\n    soundOn: soundOn,\n    setGamePlaying: setGamePlaying,\n    gameData: gameData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }) : showInstructions ? __jsx(Instructions, {\n    cancel: () => toggleInstructions(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }) : __jsx(React.Fragment, null, !showJoinForm && !showCreateForm && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    onClick: () => toggleJoinForm(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, \"Join Existing Game\"), __jsx(Button, {\n    onClick: () => toggleCreateForm(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"Create New Game\")), showJoinForm && __jsx(Join, {\n    cancel: toggleJoinForm,\n    setGamePlaying: setGamePlaying,\n    setGameData: setGameData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 28\n    }\n  }), showCreateForm && __jsx(Create, {\n    setGamePlaying: setGamePlaying,\n    setGameData: setGameData,\n    cancel: toggleCreateForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 30\n    }\n  })), __jsx(HelpIcon, {\n    onClick: () => toggleInstructions(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"?\"));\n};\n\nexport default Landing;","map":{"version":3,"sources":["/Users/farshadghazanfari/Documents/www/npat/components/Landing.js"],"names":["React","useState","styled","Join","Create","Play","Instructions","HelpIcon","StyledLanding","div","Button","button","Landing","showJoinForm","toggleJoinForm","showCreateForm","toggleCreateForm","showInstructions","toggleInstructions","isGamePlaying","setGamePlaying","gameData","setGameData","soundOn","toggleSound"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,QAAT,QAAyB,mBAAzB,C,CAA8C;;AAE9C,MAAMC,aAAa,GAAGN,MAAM,CAACO,GAAI;;;;;;;;;CAAjC;AAWA,MAAMC,MAAM,GAAGR,MAAM,CAACS,MAAO;;;;;;;;;;;;;;;;;CAA7B;;AAmBA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAiCb,QAAQ,CAAC,KAAD,CAA/C;AACA,QAAM;AAAA,OAACc,cAAD;AAAA,OAAiBC;AAAjB,MAAqCf,QAAQ,CAAC,KAAD,CAAnD;AACA,QAAM;AAAA,OAACgB,gBAAD;AAAA,OAAmBC;AAAnB,MAAyCjB,QAAQ,CAAC,KAAD,CAAvD;AACA,QAAM;AAAA,OAACkB,aAAD;AAAA,OAAgBC;AAAhB,MAAkCnB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM;AAAA,OAACoB,QAAD;AAAA,OAAWC;AAAX,MAA0BrB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACsB,OAAD;AAAA,OAAUC;AAAV,MAAyBvB,QAAQ,CAAC,IAAD,CAAvC;AAEA,SACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAIGkB,aAAa,GACZ,MAAC,IAAD;AAAM,IAAA,OAAO,EAAEI,OAAf;AAAwB,IAAA,cAAc,EAAEH,cAAxC;AAAwD,IAAA,QAAQ,EAAEC,QAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,GAEVJ,gBAAgB,GAClB,MAAC,YAAD;AAAc,IAAA,MAAM,EAAE,MAAMC,kBAAkB,CAAC,KAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADkB,GAGlB,4BACG,CAACL,YAAD,IAAiB,CAACE,cAAlB,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMD,cAAc,CAAC,IAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAME,gBAAgB,CAAC,IAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CAFJ,EAOGH,YAAY,IAAI,MAAC,IAAD;AAAM,IAAA,MAAM,EAAEC,cAAd;AAA8B,IAAA,cAAc,EAAEM,cAA9C;AAA8D,IAAA,WAAW,EAAEE,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPnB,EAQGP,cAAc,IAAI,MAAC,MAAD;AAAQ,IAAA,cAAc,EAAEK,cAAxB;AAAwC,IAAA,WAAW,EAAEE,WAArD;AAAkE,IAAA,MAAM,EAAEN,gBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARrB,CATJ,EAoBE,MAAC,QAAD;AAAU,IAAA,OAAO,EAAE,MAAME,kBAAkB,CAAC,IAAD,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SApBF,CADF;AAwBD,CAhCD;;AAkCA,eAAeN,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport Join from './Join';\nimport Create from './Create';\nimport Play from './Game/Play';\nimport Instructions from './Instructions';\nimport { HelpIcon } from './Game/GameHeader'; // Adjust the path as per your folder structure\n\nconst StyledLanding = styled.div`\n  background-image: url('/assets/stopthebus.jpg'); // Replace with the correct path\n  background-size: cover;\n  background-repeat: no-repeat;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Button = styled.button`\n  background-color: #007bff;\n  border: none;\n  color: white;\n  padding: 10px 20px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin: 10px;\n  cursor: pointer;\n  border-radius: 5px;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n\nconst Landing = () => {\n  const [showJoinForm, toggleJoinForm] = useState(false);\n  const [showCreateForm, toggleCreateForm] = useState(false);\n  const [showInstructions, toggleInstructions] = useState(false);\n  const [isGamePlaying, setGamePlaying] = useState(false);\n  const [gameData, setGameData] = useState({});\n  const [soundOn, toggleSound] = useState(true);\n\n  return (\n    <StyledLanding>\n      <div className=\"text-center mt-5 mb-4\">\n       \n      </div>\n      {isGamePlaying ? (\n        <Play soundOn={soundOn} setGamePlaying={setGamePlaying} gameData={gameData} />\n      ) : showInstructions ? (\n        <Instructions cancel={() => toggleInstructions(false)} />\n      ) : (\n        <>\n          {!showJoinForm && !showCreateForm && (\n            <div>\n              <Button onClick={() => toggleJoinForm(true)}>Join Existing Game</Button>\n              <Button onClick={() => toggleCreateForm(true)}>Create New Game</Button>\n            </div>\n          )}\n          {showJoinForm && <Join cancel={toggleJoinForm} setGamePlaying={setGamePlaying} setGameData={setGameData} />}\n          {showCreateForm && <Create setGamePlaying={setGamePlaying} setGameData={setGameData} cancel={toggleCreateForm} />}\n        </>\n      )}\n      <HelpIcon onClick={() => toggleInstructions(true)}>?</HelpIcon>\n    </StyledLanding>\n  );\n};\n\nexport default Landing;\n"]},"metadata":{},"sourceType":"module"}