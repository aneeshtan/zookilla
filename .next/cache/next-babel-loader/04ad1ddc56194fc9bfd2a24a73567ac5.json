{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farshadghazanfari/Documents/www/npat/components/Game/ResultsTable.js\";\n\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Button, Spinner, FlexColumn, FlexContainer } from '../StyledComponents';\nimport theme from '../../constants/theme';\nimport { socket } from '../../constants/websocket';\nimport Papa from 'papaparse';\nvar TableContainer = styled.div.withConfig({\n  displayName: \"ResultsTable__TableContainer\",\n  componentId: \"sc-1lg56mx-0\"\n})([\"display:flex;flex-wrap:wrap;justify-content:space-around;\"]);\nvar Container = styled.div.withConfig({\n  displayName: \"ResultsTable__Container\",\n  componentId: \"sc-1lg56mx-1\"\n})([\"padding:20px 0;display:flex;flex-direction:row;justify-content:center;flex-wrap:wrap;\"]);\nvar Paper = styled.div.withConfig({\n  displayName: \"ResultsTable__Paper\",\n  componentId: \"sc-1lg56mx-2\"\n})([\"background:white;background-size:100% 1.2em;height:auto;margin:0 auto;margin-top:30px;box-shadow:#9e9e9e63 6px 7px 14px 0px;width:250px;padding:30px 30px 30px 30px;background-image:linear-gradient(90deg,transparent 49px,transparent 49px,transparent 51px,transparent 51px),linear-gradient(#eee .1em,transparent .1em);\"]);\nvar Submission = styled.span.withConfig({\n  displayName: \"ResultsTable__Submission\",\n  componentId: \"sc-1lg56mx-3\"\n})([\"color:\", \";word-break:break-all;\"], theme.colors.blue);\nvar StyledIncrementButton = styled.button.withConfig({\n  displayName: \"ResultsTable__StyledIncrementButton\",\n  componentId: \"sc-1lg56mx-4\"\n})([\"font-weight:bold;font-size:14px;border:\", \";color:\", \";cursor:\", \";\"], function (props) {\n  return props.disabled ? '1px solid gray' : '1px solid black';\n}, function (props) {\n  return props.disabled ? 'gray' : 'black';\n}, function (props) {\n  return props.disabled ? 'not-allowed' : 'pointer';\n});\nvar InputContainer = styled.div.withConfig({\n  displayName: \"ResultsTable__InputContainer\",\n  componentId: \"sc-1lg56mx-5\"\n})([\"margin-left:15px;font-size:1.5em;display:flex;align-items:center;width:80px;justify-content:space-between;\"]);\nvar NumberContainer = styled.div.withConfig({\n  displayName: \"ResultsTable__NumberContainer\",\n  componentId: \"sc-1lg56mx-6\"\n})([\"margin-left:15px;font-size:1.5em;display:flex;align-items:center;width:80px;justify-content:center;\"]);\n\nvar ResultsTable = function ResultsTable(_ref) {\n  var gameState = _ref.gameState,\n      round = _ref.round,\n      handleSubmitScore = _ref.handleSubmitScore,\n      scoreSubmitted = _ref.scoreSubmitted,\n      scorePartner = _ref.scorePartner;\n  var initialScore = {};\n\n  var _useState = useState({}),\n      scores = _useState[0],\n      setScores = _useState[1];\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var categories = gameState.categories;\n  var currentAlphabet = gameState.currentAlphabet;\n  var scoringId = gameState.scoringType === \"cross\" ? scorePartner.id : socket.id;\n  var users = sortUserList(_toConsumableArray(gameState.users), scoringId);\n  users.forEach(function (user) {\n    categories.forEach(function (cat) {\n      var similar = similarityCheck(cat, users, user.id, round);\n\n      if (user.id === scoringId && similar.value) {\n        initialScore = Object.assign({}, initialScore, _defineProperty({}, cat, 5));\n      }\n    });\n  });\n\n  var _useState3 = useState(initialScore),\n      currentScore = _useState3[0],\n      setCurrentScore = _useState3[1];\n\n  var _useState4 = useState(_defineProperty({\n    currentScore: initialScore,\n    animalsSet: new Set(),\n    namesSet: new Set(),\n    thingsSet: new Set(),\n    placesSet: new Set(),\n    booksSet: new Set(),\n    celebritiesSet: new Set(),\n    fruitsSet: new Set(),\n    instrumentsSet: new Set(),\n    moviesSet: new Set(),\n    musiciansSet: new Set(),\n    songsSet: new Set(),\n    tv_showsSet: new Set()\n  }, \"musiciansSet\", new Set())),\n      gameData = _useState4[0],\n      setGameData = _useState4[1];\n\n  var parseCSV = function parseCSV(filePath) {\n    var response, reader, result, decoder, csv;\n    return _regeneratorRuntime.async(function parseCSV$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(filePath));\n\n          case 2:\n            response = _context.sent;\n            reader = response.body.getReader();\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(reader.read());\n\n          case 6:\n            result = _context.sent;\n            decoder = new TextDecoder('utf-8');\n            csv = decoder.decode(result.value);\n            return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n              Papa.parse(csv, {\n                complete: function complete(results) {\n                  resolve(results.data.map(function (row) {\n                    return row[0];\n                  }));\n                },\n                error: reject\n              });\n            }));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    var categories = ['animals', 'places', 'names', 'things', 'books', 'songs', 'tv_shows', 'movies', 'instruments', 'musicians', 'fruits'];\n    var categoryPromises = categories.map(function (category) {\n      return parseCSV(\"/csv/\".concat(category, \".csv\")).then(function (data) {\n        return _defineProperty({}, \"\".concat(category, \"Set\"), new Set(data.map(function (item) {\n          return item.toLowerCase().trim();\n        })));\n      });\n    });\n    Promise.all(categoryPromises).then(function (results) {\n      var newGameData = results.reduce(function (acc, currentSet) {\n        return _objectSpread({}, acc, {}, currentSet);\n      }, {});\n      setGameData(function (prevGameData) {\n        return _objectSpread({}, prevGameData, {}, newGameData);\n      });\n    });\n  }, []);\n\n  var scoreEntriesAI = function scoreEntriesAI() {\n    var newScores, _iterator, _step, category, _iterator2, _step2, user, answer, score;\n\n    return _regeneratorRuntime.async(function scoreEntriesAI$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(gameData.animalsSet.size === 0)) {\n              _context2.next = 3;\n              break;\n            }\n\n            console.log(\"Waiting for animalsSet to be populated...\");\n            return _context2.abrupt(\"return\");\n\n          case 3:\n            newScores = {};\n            _iterator = _createForOfIteratorHelper(categories);\n            _context2.prev = 5;\n\n            _iterator.s();\n\n          case 7:\n            if ((_step = _iterator.n()).done) {\n              _context2.next = 32;\n              break;\n            }\n\n            category = _step.value;\n            _iterator2 = _createForOfIteratorHelper(gameState.users);\n            _context2.prev = 10;\n\n            _iterator2.s();\n\n          case 12:\n            if ((_step2 = _iterator2.n()).done) {\n              _context2.next = 22;\n              break;\n            }\n\n            user = _step2.value;\n            answer = user.responses[round][category];\n\n            if (!answer) {\n              _context2.next = 20;\n              break;\n            }\n\n            _context2.next = 18;\n            return _regeneratorRuntime.awrap(getScoreFromAPI(category, answer));\n\n          case 18:\n            score = _context2.sent;\n            newScores[user.id] = _objectSpread({}, newScores[user.id] || {}, _defineProperty({}, category, score));\n\n          case 20:\n            _context2.next = 12;\n            break;\n\n          case 22:\n            _context2.next = 27;\n            break;\n\n          case 24:\n            _context2.prev = 24;\n            _context2.t0 = _context2[\"catch\"](10);\n\n            _iterator2.e(_context2.t0);\n\n          case 27:\n            _context2.prev = 27;\n\n            _iterator2.f();\n\n            return _context2.finish(27);\n\n          case 30:\n            _context2.next = 7;\n            break;\n\n          case 32:\n            _context2.next = 37;\n            break;\n\n          case 34:\n            _context2.prev = 34;\n            _context2.t1 = _context2[\"catch\"](5);\n\n            _iterator.e(_context2.t1);\n\n          case 37:\n            _context2.prev = 37;\n\n            _iterator.f();\n\n            return _context2.finish(37);\n\n          case 40:\n            setScores(newScores);\n            setLoading(false);\n\n          case 42:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[5, 34, 37, 40], [10, 24, 27, 30]], Promise);\n  };\n\n  var getScoreFromAPI = function getScoreFromAPI(category, answer, gameState) {\n    var formattedAnswer, categorySets, categorySet, isExactMatch, isSimilarMatch;\n    return _regeneratorRuntime.async(function getScoreFromAPI$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            formattedAnswer = answer.toLowerCase().trim();\n            categorySets = {\n              Animal: gameData.animalsSet,\n              Name: gameData.namesSet,\n              Thing: gameData.thingsSet,\n              Place: gameData.placesSet,\n              Songs: gameData.songsSet,\n              TV_shows: gameData.tv_showsSet,\n              Books: gameData.booksSet,\n              Celebrities: gameData.celebritiesSet,\n              Musicians: gameData.musiciansSet,\n              Instruments: gameData.instrumentsSet\n            };\n            categorySet = categorySets[category] || new Set();\n            isExactMatch = false;\n            isSimilarMatch = false;\n            categorySet.forEach(function (item) {\n              if (formattedAnswer === item) {\n                isExactMatch = true;\n              } else if (formattedAnswer.includes(item) || item.includes(formattedAnswer)) {\n                isSimilarMatch = true;\n              }\n            }); //console.log(currentAlphabet);\n\n            if (formattedAnswer.startsWith(currentAlphabet.toLowerCase())) {\n              _context3.next = 10;\n              break;\n            }\n\n            console.log(\"'\".concat(formattedAnswer, \"' does not start with the round letter '\").concat(currentAlphabet, \"'.\"));\n            return _context3.abrupt(\"return\", -10);\n\n          case 10:\n            if (!isExactMatch) {\n              _context3.next = 15;\n              break;\n            }\n\n            console.log(\"'\".concat(formattedAnswer, \"' is an exact match in \").concat(category, \".\"));\n            return _context3.abrupt(\"return\", 10);\n\n          case 15:\n            if (!isSimilarMatch) {\n              _context3.next = 20;\n              break;\n            }\n\n            console.log(\"'\".concat(formattedAnswer, \"' is a similar match in \").concat(category, \".\"));\n            return _context3.abrupt(\"return\", 5);\n\n          case 20:\n            console.log(\"'\".concat(formattedAnswer, \"' is not found in the \").concat(category, \" set.\"));\n\n          case 21:\n            return _context3.abrupt(\"return\", 0);\n\n          case 24:\n            _context3.prev = 24;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.error(\"Error checking answer:\", _context3.t0);\n            return _context3.abrupt(\"return\", 0);\n\n          case 28:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 24]], Promise);\n  };\n\n  var totalScore = 0;\n  useEffect(function () {\n    if (gameState.scoringType === \"ai\" && gameData.animalsSet.size > 0) {\n      scoreEntriesAI();\n    }\n  }, [gameState, round, gameData.animalsSet, gameData.namesSet, gameData.thingsSet, gameData.placesSet]); // Add animalsSet as a dependency\n\n  if (loading) {\n    return __jsx(Spinner, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(React.Fragment, null, gameState.scoringType === \"ai\" ? __jsx(TableContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 3\n    }\n  }, gameState.users.map(function (user) {\n    return __jsx(Paper, {\n      key: user.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 5\n      }\n    }, __jsx(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 7\n      }\n    }, user.name), gameState.categories.map(function (category) {\n      return __jsx(\"div\", {\n        key: category,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 9\n        }\n      }, category, \": \", __jsx(Submission, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 23\n        }\n      }, user.responses[round][category] || '-'), __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }\n      }, \" Score: \", scores[user.id] && scores[user.id][category]));\n    }), __jsx(\"h3\", {\n      style: {\n        'text-align': 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 7\n      }\n    }, \"Total Score: \", Object.values(scores[user.id] || {}).reduce(function (a, b) {\n      return a + b;\n    }, 0)));\n  })) : __jsx(React.Fragment, null, gameState.scoringType === \"cross\" ? __jsx(FlexContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 42\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 57\n    }\n  }, \"You are scoring for \", __jsx(Submission, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 81\n    }\n  }, scorePartner.name), \"!\")) : false, __jsx(TableContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 5\n    }\n  }, users.map(function (user) {\n    return __jsx(Paper, {\n      key: user.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 26\n      }\n    }, __jsx(\"h2\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 74\n      }\n    }, user.name), user.id === scoringId ? __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 36\n      }\n    }, \"Score\") : false), categories.map(function (category) {\n      var similar = similarityCheck(category, users, user.id, round);\n      var selfScoreCard = user.id === scoringId;\n      return __jsx(React.Fragment, {\n        key: category,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 18\n        }\n      }, similar.value && selfScoreCard ? __jsx(\"span\", {\n        style: {\n          color: theme.colors.red\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 47\n        }\n      }, scorePartner.name || 'You', \" and \", similar.name, \" put down the same word for \", category) : false, __jsx(\"div\", {\n        style: {\n          marginBottom: '10px',\n          display: \"flex\",\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        key: category,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        style: {\n          width: selfScoreCard ? \"150px\" : \"auto\",\n          fontSize: \"1.2em\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 15\n        }\n      }, category, \":\", \"  \", \" \", __jsx(Submission, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 35\n        }\n      }, user.responses[round][category] || '-')), selfScoreCard ? user.responses[round][category] ? __jsx(InputContainer, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 51\n        }\n      }, __jsx(NumberInput, {\n        category: category,\n        setCurrentScore: setCurrentScore,\n        currentScore: currentScore,\n        value: similar.value ? 5 : 0,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 19\n        }\n      }), \" \") : __jsx(NumberContainer, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 167\n        }\n      }, \"0\") : ''));\n    }), user.id === scoringId ? __jsx(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 34\n      }\n    }, \"Total Score: \".concat(sumAllScores(currentScore))) : false);\n  }))), __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 5\n    }\n  }, !scoreSubmitted ? __jsx(React.Fragment, null, __jsx(Button, {\n    onClick: function onClick(event) {\n      event.preventDefault();\n      handleSubmitScore(totalScore, scoringId);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }\n  }, \"Go Ahead\")) : __jsx(FlexColumn, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 11\n    }\n  }, \"Waiting for others\"), __jsx(Spinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }))));\n};\n\nvar similarityCheck = function similarityCheck(category, users, currentUserId, round) {\n  var currentUser = users.find(function (user) {\n    return user.id === currentUserId;\n  });\n  var currentUserResponse = currentUser.responses[round][category] ? currentUser.responses[round][category].toLowerCase().trim() : null;\n  var value = false;\n  var name = null;\n  users.filter(function (user) {\n    return user.id !== currentUserId;\n  }).forEach(function (user) {\n    var otherResponse = user.responses[round][category] ? user.responses[round][category].toLowerCase().trim() : null;\n\n    if (currentUserResponse && otherResponse && currentUserResponse === otherResponse) {\n      value = true;\n      name = user.name;\n    }\n\n    return;\n  });\n  return {\n    value: value,\n    name: name\n  };\n};\n\nvar sumAllScores = function sumAllScores(scores) {\n  return Object.keys(scores).map(function (cat) {\n    return scores[cat];\n  }).reduce(function (a, b) {\n    return a + b;\n  }, 0);\n};\n\nvar NumberInput = function NumberInput(_ref3) {\n  var value = _ref3.value,\n      currentScore = _ref3.currentScore,\n      setCurrentScore = _ref3.setCurrentScore,\n      category = _ref3.category;\n\n  var _useState6 = useState(value),\n      numberValue = _useState6[0],\n      setNumberValue = _useState6[1];\n\n  useEffect(function () {\n    setCurrentScore(Object.assign({}, currentScore, _defineProperty({}, category, value)));\n  }, []);\n\n  var onMinus = function onMinus() {\n    setCurrentScore(Object.assign({}, currentScore, _defineProperty({}, category, numberValue - 5)));\n    if (!(numberValue <= 0)) setNumberValue(numberValue - 5);\n  };\n\n  var onPlus = function onPlus() {\n    setCurrentScore(Object.assign({}, currentScore, _defineProperty({}, category, numberValue + 5)));\n    if (!(numberValue >= 10)) setNumberValue(numberValue + 5);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(StyledIncrementButton, {\n    disabled: numberValue === 0,\n    onClick: function onClick() {\n      return onMinus();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 12\n    }\n  }, \"-\"), numberValue, __jsx(StyledIncrementButton, {\n    disabled: numberValue === 10,\n    onClick: function onClick() {\n      return onPlus();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 128\n    }\n  }, \"+\"));\n};\n\nvar sortUserList = function sortUserList(users, scoringId) {\n  var index = users.findIndex(function (user) {\n    return user.id === scoringId;\n  });\n\n  if (index != -1) {\n    var first = users.splice(index, 1)[0];\n    users.unshift(first);\n    return users;\n  }\n\n  return users;\n};\n\nexport default ResultsTable;","map":{"version":3,"sources":["/Users/farshadghazanfari/Documents/www/npat/components/Game/ResultsTable.js"],"names":["React","useState","useEffect","styled","Button","Spinner","FlexColumn","FlexContainer","theme","socket","Papa","TableContainer","div","Container","Paper","Submission","span","colors","blue","StyledIncrementButton","button","props","disabled","InputContainer","NumberContainer","ResultsTable","gameState","round","handleSubmitScore","scoreSubmitted","scorePartner","initialScore","scores","setScores","loading","setLoading","categories","currentAlphabet","scoringId","scoringType","id","users","sortUserList","forEach","user","cat","similar","similarityCheck","value","Object","assign","currentScore","setCurrentScore","animalsSet","Set","namesSet","thingsSet","placesSet","booksSet","celebritiesSet","fruitsSet","instrumentsSet","moviesSet","musiciansSet","songsSet","tv_showsSet","gameData","setGameData","parseCSV","filePath","fetch","response","reader","body","getReader","read","result","decoder","TextDecoder","csv","decode","Promise","resolve","reject","parse","complete","results","data","map","row","error","categoryPromises","category","then","item","toLowerCase","trim","all","newGameData","reduce","acc","currentSet","prevGameData","scoreEntriesAI","size","console","log","newScores","answer","responses","getScoreFromAPI","score","formattedAnswer","categorySets","Animal","Name","Thing","Place","Songs","TV_shows","Books","Celebrities","Musicians","Instruments","categorySet","isExactMatch","isSimilarMatch","includes","startsWith","totalScore","name","values","a","b","display","justifyContent","selfScoreCard","color","red","marginBottom","alignItems","width","fontSize","sumAllScores","event","preventDefault","currentUserId","currentUser","find","currentUserResponse","filter","otherResponse","keys","NumberInput","numberValue","setNumberValue","onMinus","onPlus","index","findIndex","first","splice","unshift"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Button, Spinner, FlexColumn, FlexContainer } from '../StyledComponents'\nimport theme from '../../constants/theme'\nimport { socket } from '../../constants/websocket'\nimport Papa from 'papaparse';\n\nconst TableContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`\n\nconst Container = styled.div`\n  padding: 20px 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  flex-wrap: wrap;\n`\n\nconst Paper = styled.div`\n  background: white;\n  background-size: 100% 1.2em;\n  height: auto;\n  margin: 0 auto;\n  margin-top: 30px;\n  box-shadow: #9e9e9e63 6px 7px 14px 0px;\n  width: 250px;\n  padding: 30px 30px 30px 30px;\n  background-image:\n  linear-gradient(90deg, transparent 49px, transparent 49px, transparent 51px, transparent 51px),\n  linear-gradient(#eee .1em, transparent .1em);\n`\n\nconst Submission = styled.span`\n  color: ${theme.colors.blue};\n  word-break: break-all;\n`\n\nconst StyledIncrementButton = styled.button`\n  font-weight: bold;\n  font-size: 14px;\n  border: ${props => props.disabled ? '1px solid gray' : '1px solid black'};\n  color: ${props => props.disabled ? 'gray' : 'black'};\n  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n`\n\nconst InputContainer = styled.div`\n  margin-left: 15px;\n  font-size: 1.5em;\n  display: flex;\n  align-items: center;\n  width: 80px;\n  justify-content: space-between;\n`\n\nconst NumberContainer = styled.div`\n  margin-left: 15px;\n  font-size: 1.5em;\n  display: flex;\n  align-items: center;\n  width: 80px;\n  justify-content: center;\n`\n\nconst ResultsTable = ({ gameState, round, handleSubmitScore, scoreSubmitted, scorePartner }) => {\n  let initialScore = {}\n  const [scores, setScores] = useState({});\n  const [loading, setLoading] = useState(true);\n  const categories = gameState.categories;\n  const currentAlphabet = gameState.currentAlphabet;\n  let scoringId = gameState.scoringType === \"cross\" ? scorePartner.id : socket.id;\n  let users = sortUserList([...gameState.users], scoringId);\n\n  users.forEach(user => {\n    categories.forEach(cat => {\n      let similar = similarityCheck(cat, users, user.id, round)\n      if (user.id === scoringId && similar.value) {\n\n        initialScore = Object.assign({}, initialScore, { [cat]: 5 })\n      }\n    })\n  })\n\n  const [currentScore, setCurrentScore] = useState(initialScore);\n \n  const [gameData, setGameData] = useState({\n    currentScore: initialScore,\n    animalsSet: new Set(),\n    namesSet: new Set(),\n    thingsSet: new Set(),\n    placesSet: new Set(),\n    \n    booksSet: new Set(),\n    celebritiesSet: new Set(),\n    fruitsSet: new Set(),\n    instrumentsSet: new Set(),\n    moviesSet: new Set(),\n    musiciansSet: new Set(),\n    songsSet: new Set(),\n    tv_showsSet: new Set(),\n    musiciansSet: new Set(),\n\n\n\n  });\n  const parseCSV = async (filePath) => {\n    const response = await fetch(filePath);\n    const reader = response.body.getReader();\n    const result = await reader.read();\n    const decoder = new TextDecoder('utf-8');\n    const csv = decoder.decode(result.value);\n    return new Promise((resolve, reject) => {\n      Papa.parse(csv, {\n        complete: (results) => {\n          resolve(results.data.map(row => row[0]));\n        },\n        error: reject\n      });\n    });\n  };\n\n  useEffect(() => {\n    const categories = ['animals', 'places', 'names', 'things', 'books', 'songs', 'tv_shows', 'movies', 'instruments', 'musicians', 'fruits'];\n    \n    const categoryPromises = categories.map(category =>\n      parseCSV(`/csv/${category}.csv`).then(data => ({\n        [`${category}Set`]: new Set(data.map(item => item.toLowerCase().trim()))\n      }))\n    );\n  \n    Promise.all(categoryPromises).then(results => {\n      const newGameData = results.reduce((acc, currentSet) => {\n        return { ...acc, ...currentSet };\n      }, {});\n  \n      setGameData(prevGameData => ({\n        ...prevGameData,\n        ...newGameData\n      }));\n    });\n  }, []);\n\n  const scoreEntriesAI = async () => {\n\n    if (gameData.animalsSet.size === 0) {\n      console.log(\"Waiting for animalsSet to be populated...\");\n      return; // Exit if animalsSet is not ready\n    }\n\n    const newScores = {};\n    for (const category of categories) {\n      for (const user of gameState.users) {\n        const answer = user.responses[round][category];\n        if (answer) {\n          const score = await getScoreFromAPI(category, answer);\n          newScores[user.id] = { ...(newScores[user.id] || {}), [category]: score };\n        }\n      }\n    }\n    setScores(newScores);\n    setLoading(false);\n  };\n\n\n  const getScoreFromAPI = async (category, answer,gameState) => {\n    try {\n        const formattedAnswer = answer.toLowerCase().trim();\n        const categorySets = {\n          Animal: gameData.animalsSet,\n          Name: gameData.namesSet,\n          Thing: gameData.thingsSet,\n          Place: gameData.placesSet,\n          Songs: gameData.songsSet,\n          TV_shows: gameData.tv_showsSet,\n          Books: gameData.booksSet,\n          Celebrities: gameData.celebritiesSet,\n          Musicians: gameData.musiciansSet,\n          Instruments: gameData.instrumentsSet,\n        };\n        \n        let categorySet = categorySets[category] || new Set();\n\n        let isExactMatch = false;\n        let isSimilarMatch = false;\n\n        categorySet.forEach(item => {\n            if (formattedAnswer === item) {\n                isExactMatch = true;\n            } else if (formattedAnswer.includes(item) || item.includes(formattedAnswer)) {\n                isSimilarMatch = true;\n            }\n        });\n        //console.log(currentAlphabet);\n        if (!formattedAnswer.startsWith(currentAlphabet.toLowerCase())) {\n          console.log(`'${formattedAnswer}' does not start with the round letter '${currentAlphabet}'.`);\n          return -10; // Deduct points if it doesn't start with the round letter\n        }\n\n\n        if (isExactMatch) {\n            console.log(`'${formattedAnswer}' is an exact match in ${category}.`);\n            return 10; // Exact match\n        } else if (isSimilarMatch) {\n            console.log(`'${formattedAnswer}' is a similar match in ${category}.`);\n            return 5; // Similar match\n        } else {\n            console.log(`'${formattedAnswer}' is not found in the ${category} set.`);\n        }\n\n        return 0; // Answer is incorrect or not in the category\n    } catch (error) {\n        console.error(\"Error checking answer:\", error);\n        return 0;\n    }\n};\n\n\n\n  let totalScore = 0;\n  useEffect(() => {\n    if(gameState.scoringType === \"ai\" && gameData.animalsSet.size > 0) {\n      scoreEntriesAI();\n    }\n  }, [gameState, round, gameData.animalsSet, gameData.namesSet, gameData.thingsSet, gameData.placesSet]); // Add animalsSet as a dependency\n  \n\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  return <>\n\n{gameState.scoringType === \"ai\" ? ( \n  <TableContainer>\n  {gameState.users.map(user => (\n    <Paper key={user.id}>\n      <h2>{user.name}</h2>\n      {gameState.categories.map(category => (\n        <div key={category}>\n          {category}: <Submission>{user.responses[round][category] || '-'}</Submission>\n          <span> Score: {scores[user.id] && scores[user.id][category]}</span>\n        </div>\n      ))}\n      <h3 style={{ 'text-align': 'center' }} >Total Score: {Object.values(scores[user.id] || {}).reduce((a, b) => a + b, 0)}</h3>\n    </Paper>\n  ))}\n</TableContainer>\n    ) : (\n      <>\n    {gameState.scoringType === \"cross\" ? <FlexContainer><h1>You are scoring for <Submission>{scorePartner.name}</Submission>!</h1></FlexContainer> : false}\n    <TableContainer>\n      {users.map(user => <Paper key={user.id}>\n        <h2 style={{ display: 'flex', justifyContent: 'space-between' }}><span>{user.name}</span>\n          {user.id === scoringId ? <span>Score</span> : false}\n        </h2>\n        {categories.map(category => {\n          let similar = similarityCheck(category, users, user.id, round)\n          let selfScoreCard = user.id === scoringId;\n          return <React.Fragment key={category}>\n            {similar.value && selfScoreCard ? <span style={{ color: theme.colors.red }}>{scorePartner.name || 'You'} and {similar.name} put down the same word for {category}</span> : false}\n            <div style={{ marginBottom: '10px', display: \"flex\", justifyContent: 'space-between', alignItems: 'center' }} key={category}>\n              <div style={{ width: selfScoreCard ? \"150px\" : \"auto\", fontSize: \"1.2em\" }}>\n                {category}:{`  `} <Submission>{user.responses[round][category] || '-'}</Submission>\n              </div>\n              {selfScoreCard ?\n                user.responses[round][category] ? <InputContainer>\n                  <NumberInput category={category} setCurrentScore={setCurrentScore} currentScore={currentScore} value={similar.value ? 5 : 0} /> </InputContainer> : <NumberContainer>0</NumberContainer>\n                : ''}\n            </div>\n          </React.Fragment>\n        }\n        )}\n        {user.id === scoringId ? <h2>{`Total Score: ${sumAllScores(currentScore)}`}</h2> : false}\n      </Paper>)}\n    </TableContainer>\n    </>\n    )}\n    <Container>\n      {!scoreSubmitted ? <>\n        <Button onClick={(event) => {\n          event.preventDefault()\n          handleSubmitScore(totalScore, scoringId)\n        }}>Go Ahead</Button>\n      </> : <FlexColumn>\n          <h2>Waiting for others</h2>\n          <Spinner />\n        </FlexColumn>}\n    </Container>\n  </>\n  \n}\n\nconst similarityCheck = (category, users, currentUserId, round) => {\n  let currentUser = users.find(user => user.id === currentUserId);\n  let currentUserResponse = currentUser.responses[round][category] ? currentUser.responses[round][category].toLowerCase().trim() : null;\n\n  let value = false;\n  let name = null;\n  users.filter(user => user.id !== currentUserId).forEach(user => {\n    let otherResponse = user.responses[round][category] ? user.responses[round][category].toLowerCase().trim() : null;\n    if (currentUserResponse && otherResponse && (currentUserResponse === otherResponse)) {\n      value = true;\n      name = user.name\n    }\n    return;\n  })\n  return { value, name };\n}\n\nconst sumAllScores = (scores) => Object.keys(scores).map(cat => scores[cat]).reduce((a, b) => a + b, 0)\n\nconst NumberInput = ({ value, currentScore, setCurrentScore, category }) => {\n  const [numberValue, setNumberValue] = useState(value)\n  useEffect(() => {\n    setCurrentScore(Object.assign({}, currentScore, { [category]: value }))\n  }, [])\n\n  const onMinus = () => {\n    setCurrentScore(Object.assign({}, currentScore, { [category]: numberValue - 5 }))\n    if (!(numberValue <= 0)) setNumberValue(numberValue - 5)\n  }\n\n  const onPlus = () => {\n    setCurrentScore(Object.assign({}, currentScore, { [category]: numberValue + 5 }))\n    if (!(numberValue >= 10)) setNumberValue(numberValue + 5)\n  }\n  return <><StyledIncrementButton disabled={numberValue === 0} onClick={() => onMinus()}>-</StyledIncrementButton>{numberValue}<StyledIncrementButton disabled={numberValue === 10} onClick={() => onPlus()}>+</StyledIncrementButton></>\n}\n\n\nconst sortUserList = (users, scoringId) => {\n  let index = users.findIndex(user => user.id === scoringId);\n  if (index != -1) {\n    let first = users.splice(index, 1)[0];\n    users.unshift(first);\n    return users;\n  }\n  return users\n}\n\n\nexport default ResultsTable;"]},"metadata":{},"sourceType":"module"}