{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Button, Spinner, FlexColumn, FlexContainer } from '../StyledComponents';\nimport theme from '../../constants/theme';\nimport { socket } from '../../constants/websocket';\nimport Papa from 'papaparse';\nvar TableContainer = styled.div.withConfig({\n  displayName: \"ResultsTable__TableContainer\",\n  componentId: \"sc-1lg56mx-0\"\n})([\"display:flex;flex-wrap:wrap;justify-content:space-around;\"]);\nvar Container = styled.div.withConfig({\n  displayName: \"ResultsTable__Container\",\n  componentId: \"sc-1lg56mx-1\"\n})([\"padding:20px 0;display:flex;flex-direction:row;justify-content:center;flex-wrap:wrap;\"]);\nvar Paper = styled.div.withConfig({\n  displayName: \"ResultsTable__Paper\",\n  componentId: \"sc-1lg56mx-2\"\n})([\"background:white;background-size:100% 1.2em;height:auto;margin:0 auto;margin-top:30px;box-shadow:#9e9e9e63 6px 7px 14px 0px;width:250px;padding:30px 30px 30px 30px;background-image:linear-gradient(90deg,transparent 49px,transparent 49px,transparent 51px,transparent 51px),linear-gradient(#eee .1em,transparent .1em);\"]);\nvar Submission = styled.span.withConfig({\n  displayName: \"ResultsTable__Submission\",\n  componentId: \"sc-1lg56mx-3\"\n})([\"color:\", \";word-break:break-all;\"], theme.colors.blue);\nvar StyledIncrementButton = styled.button.withConfig({\n  displayName: \"ResultsTable__StyledIncrementButton\",\n  componentId: \"sc-1lg56mx-4\"\n})([\"font-weight:bold;font-size:14px;border:\", \";color:\", \";cursor:\", \";\"], function (props) {\n  return props.disabled ? '1px solid gray' : '1px solid black';\n}, function (props) {\n  return props.disabled ? 'gray' : 'black';\n}, function (props) {\n  return props.disabled ? 'not-allowed' : 'pointer';\n});\nvar InputContainer = styled.div.withConfig({\n  displayName: \"ResultsTable__InputContainer\",\n  componentId: \"sc-1lg56mx-5\"\n})([\"margin-left:15px;font-size:1.5em;display:flex;align-items:center;width:80px;justify-content:space-between;\"]);\nvar NumberContainer = styled.div.withConfig({\n  displayName: \"ResultsTable__NumberContainer\",\n  componentId: \"sc-1lg56mx-6\"\n})([\"margin-left:15px;font-size:1.5em;display:flex;align-items:center;width:80px;justify-content:center;\"]);\n\nvar ResultsTable = function ResultsTable(_ref) {\n  var gameState = _ref.gameState,\n      round = _ref.round,\n      handleSubmitScore = _ref.handleSubmitScore,\n      scoreSubmitted = _ref.scoreSubmitted,\n      scorePartner = _ref.scorePartner;\n  var initialScore = {};\n\n  var _useState = useState({}),\n      scores = _useState[0],\n      setScores = _useState[1];\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var categories = gameState.categories;\n  var currentAlphabet = gameState.currentAlphabet;\n  var scoringId = gameState.scoringType === \"cross\" ? scorePartner.id : socket.id;\n  var users = sortUserList(_toConsumableArray(gameState.users), scoringId);\n  users.forEach(function (user) {\n    categories.forEach(function (cat) {\n      var similar = similarityCheck(cat, users, user.id, round);\n\n      if (user.id === scoringId && similar.value) {\n        initialScore = Object.assign({}, initialScore, _defineProperty({}, cat, 5));\n      }\n    });\n  });\n\n  var _useState3 = useState(initialScore),\n      currentScore = _useState3[0],\n      setCurrentScore = _useState3[1];\n\n  var _useState4 = useState(_defineProperty({\n    currentScore: initialScore,\n    animalsSet: new Set(),\n    namesSet: new Set(),\n    thingsSet: new Set(),\n    placesSet: new Set(),\n    booksSet: new Set(),\n    celebritiesSet: new Set(),\n    fruitsSet: new Set(),\n    instrumentsSet: new Set(),\n    moviesSet: new Set(),\n    musiciansSet: new Set(),\n    songsSet: new Set(),\n    tv_showsSet: new Set()\n  }, \"musiciansSet\", new Set())),\n      gameData = _useState4[0],\n      setGameData = _useState4[1];\n\n  var parseCSV = function parseCSV(filePath) {\n    var response, reader, result, decoder, csv;\n    return _regeneratorRuntime.async(function parseCSV$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(filePath));\n\n          case 2:\n            response = _context.sent;\n            reader = response.body.getReader();\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(reader.read());\n\n          case 6:\n            result = _context.sent;\n            decoder = new TextDecoder('utf-8');\n            csv = decoder.decode(result.value);\n            return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n              Papa.parse(csv, {\n                complete: function complete(results) {\n                  resolve(results.data.map(function (row) {\n                    return row[0];\n                  }));\n                },\n                error: reject\n              });\n            }));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    var categories = ['animals', 'places', 'names', 'things', 'books', 'songs', 'tv_shows', 'movies', 'instruments', 'musicians', 'fruits'];\n    var categoryPromises = categories.map(function (category) {\n      return parseCSV(\"/csv/\".concat(category, \".csv\")).then(function (data) {\n        return _defineProperty({}, \"\".concat(category, \"Set\"), new Set(data.map(function (item) {\n          return item.toLowerCase().trim();\n        })));\n      });\n    });\n    Promise.all(categoryPromises).then(function (results) {\n      var newGameData = results.reduce(function (acc, currentSet) {\n        return _objectSpread({}, acc, {}, currentSet);\n      }, {});\n      setGameData(function (prevGameData) {\n        return _objectSpread({}, prevGameData, {}, newGameData);\n      });\n    });\n  }, []);\n\n  var scoreEntriesAI = function scoreEntriesAI() {\n    var newScores, _iterator, _step, category, _iterator2, _step2, user, answer, score;\n\n    return _regeneratorRuntime.async(function scoreEntriesAI$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(gameData.animalsSet.size === 0)) {\n              _context2.next = 3;\n              break;\n            }\n\n            console.log(\"Waiting for animalsSet to be populated...\");\n            return _context2.abrupt(\"return\");\n\n          case 3:\n            newScores = {};\n            _iterator = _createForOfIteratorHelper(categories);\n            _context2.prev = 5;\n\n            _iterator.s();\n\n          case 7:\n            if ((_step = _iterator.n()).done) {\n              _context2.next = 32;\n              break;\n            }\n\n            category = _step.value;\n            _iterator2 = _createForOfIteratorHelper(gameState.users);\n            _context2.prev = 10;\n\n            _iterator2.s();\n\n          case 12:\n            if ((_step2 = _iterator2.n()).done) {\n              _context2.next = 22;\n              break;\n            }\n\n            user = _step2.value;\n            answer = user.responses[round][category];\n\n            if (!answer) {\n              _context2.next = 20;\n              break;\n            }\n\n            _context2.next = 18;\n            return _regeneratorRuntime.awrap(getScoreFromAPI(category, answer));\n\n          case 18:\n            score = _context2.sent;\n            newScores[user.id] = _objectSpread({}, newScores[user.id] || {}, _defineProperty({}, category, score));\n\n          case 20:\n            _context2.next = 12;\n            break;\n\n          case 22:\n            _context2.next = 27;\n            break;\n\n          case 24:\n            _context2.prev = 24;\n            _context2.t0 = _context2[\"catch\"](10);\n\n            _iterator2.e(_context2.t0);\n\n          case 27:\n            _context2.prev = 27;\n\n            _iterator2.f();\n\n            return _context2.finish(27);\n\n          case 30:\n            _context2.next = 7;\n            break;\n\n          case 32:\n            _context2.next = 37;\n            break;\n\n          case 34:\n            _context2.prev = 34;\n            _context2.t1 = _context2[\"catch\"](5);\n\n            _iterator.e(_context2.t1);\n\n          case 37:\n            _context2.prev = 37;\n\n            _iterator.f();\n\n            return _context2.finish(37);\n\n          case 40:\n            setScores(newScores);\n            setLoading(false);\n\n          case 42:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[5, 34, 37, 40], [10, 24, 27, 30]], Promise);\n  };\n\n  var getScoreFromAPI = function getScoreFromAPI(category, answer, gameState) {\n    var formattedAnswer, categorySets, categorySet, isExactMatch, isSimilarMatch;\n    return _regeneratorRuntime.async(function getScoreFromAPI$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            formattedAnswer = answer.toLowerCase().trim();\n            categorySets = {\n              Animal: gameData.animalsSet,\n              Name: gameData.namesSet,\n              Thing: gameData.thingsSet,\n              Place: gameData.placesSet,\n              Songs: gameData.songsSet,\n              TV_shows: gameData.tv_showsSet,\n              Books: gameData.booksSet,\n              Celebrities: gameData.celebritiesSet,\n              Musicians: gameData.musiciansSet,\n              Instruments: gameData.instrumentsSet\n            };\n            categorySet = categorySets[category] || new Set();\n            isExactMatch = false;\n            isSimilarMatch = false;\n            categorySet.forEach(function (item) {\n              if (formattedAnswer === item) {\n                isExactMatch = true;\n              } else if (formattedAnswer.includes(item) || item.includes(formattedAnswer)) {\n                isSimilarMatch = true;\n              }\n            }); //console.log(currentAlphabet);\n\n            if (formattedAnswer.startsWith(currentAlphabet.toLowerCase())) {\n              _context3.next = 10;\n              break;\n            }\n\n            console.log(\"'\".concat(formattedAnswer, \"' does not start with the round letter '\").concat(currentAlphabet, \"'.\"));\n            return _context3.abrupt(\"return\", -10);\n\n          case 10:\n            if (!isExactMatch) {\n              _context3.next = 15;\n              break;\n            }\n\n            console.log(\"'\".concat(formattedAnswer, \"' is an exact match in \").concat(category, \".\"));\n            return _context3.abrupt(\"return\", 10);\n\n          case 15:\n            if (!isSimilarMatch) {\n              _context3.next = 20;\n              break;\n            }\n\n            console.log(\"'\".concat(formattedAnswer, \"' is a similar match in \").concat(category, \".\"));\n            return _context3.abrupt(\"return\", 5);\n\n          case 20:\n            console.log(\"'\".concat(formattedAnswer, \"' is not found in the \").concat(category, \" set.\"));\n\n          case 21:\n            return _context3.abrupt(\"return\", 0);\n\n          case 24:\n            _context3.prev = 24;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.error(\"Error checking answer:\", _context3.t0);\n            return _context3.abrupt(\"return\", 0);\n\n          case 28:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 24]], Promise);\n  };\n\n  var totalScore = 0;\n  useEffect(function () {\n    if (gameState.scoringType === \"ai\" && gameData.animalsSet.size > 0) {\n      scoreEntriesAI();\n    }\n  }, [gameState, round, gameData.animalsSet, gameData.namesSet, gameData.thingsSet, gameData.placesSet]); // Add animalsSet as a dependency\n\n  if (loading) {\n    return __jsx(Spinner, null);\n  }\n\n  return __jsx(React.Fragment, null, gameState.scoringType === \"ai\" ? __jsx(TableContainer, null, gameState.users.map(function (user) {\n    return __jsx(Paper, {\n      key: user.id\n    }, __jsx(\"h2\", null, user.name), gameState.categories.map(function (category) {\n      return __jsx(\"div\", {\n        key: category\n      }, category, \": \", __jsx(Submission, null, user.responses[round][category] || '-'), __jsx(\"span\", null, \" Score: \", scores[user.id] && scores[user.id][category]));\n    }), __jsx(\"h3\", {\n      style: {\n        'text-align': 'center'\n      }\n    }, \"Total Score: \", Object.values(scores[user.id] || {}).reduce(function (a, b) {\n      return a + b;\n    }, 0)));\n  })) : __jsx(React.Fragment, null, gameState.scoringType === \"cross\" ? __jsx(FlexContainer, null, __jsx(\"h1\", null, \"You are scoring for \", __jsx(Submission, null, scorePartner.name), \"!\")) : false, __jsx(TableContainer, null, users.map(function (user) {\n    return __jsx(Paper, {\n      key: user.id\n    }, __jsx(\"h2\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      }\n    }, __jsx(\"span\", null, user.name), user.id === scoringId ? __jsx(\"span\", null, \"Score\") : false), categories.map(function (category) {\n      var similar = similarityCheck(category, users, user.id, round);\n      var selfScoreCard = user.id === scoringId;\n      return __jsx(React.Fragment, {\n        key: category\n      }, similar.value && selfScoreCard ? __jsx(\"span\", {\n        style: {\n          color: theme.colors.red\n        }\n      }, scorePartner.name || 'You', \" and \", similar.name, \" put down the same word for \", category) : false, __jsx(\"div\", {\n        style: {\n          marginBottom: '10px',\n          display: \"flex\",\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        key: category\n      }, __jsx(\"div\", {\n        style: {\n          width: selfScoreCard ? \"150px\" : \"auto\",\n          fontSize: \"1.2em\"\n        }\n      }, category, \":\", \"  \", \" \", __jsx(Submission, null, user.responses[round][category] || '-')), selfScoreCard ? user.responses[round][category] ? __jsx(InputContainer, null, __jsx(NumberInput, {\n        category: category,\n        setCurrentScore: setCurrentScore,\n        currentScore: currentScore,\n        value: similar.value ? 5 : 0\n      }), \" \") : __jsx(NumberContainer, null, \"0\") : ''));\n    }), user.id === scoringId ? __jsx(\"h2\", null, \"Total Score: \".concat(sumAllScores(currentScore))) : false);\n  }))), __jsx(Container, null, !scoreSubmitted ? __jsx(React.Fragment, null, __jsx(Button, {\n    onClick: function onClick(event) {\n      event.preventDefault();\n      handleSubmitScore(totalScore, scoringId);\n    }\n  }, \"Go Next!\")) : __jsx(FlexColumn, null, __jsx(\"h2\", null, \"Waiting for others\"), __jsx(Spinner, null))));\n};\n\nvar similarityCheck = function similarityCheck(category, users, currentUserId, round) {\n  var currentUser = users.find(function (user) {\n    return user.id === currentUserId;\n  });\n  var currentUserResponse = currentUser.responses[round][category] ? currentUser.responses[round][category].toLowerCase().trim() : null;\n  var value = false;\n  var name = null;\n  users.filter(function (user) {\n    return user.id !== currentUserId;\n  }).forEach(function (user) {\n    var otherResponse = user.responses[round][category] ? user.responses[round][category].toLowerCase().trim() : null;\n\n    if (currentUserResponse && otherResponse && currentUserResponse === otherResponse) {\n      value = true;\n      name = user.name;\n    }\n\n    return;\n  });\n  return {\n    value: value,\n    name: name\n  };\n};\n\nvar sumAllScores = function sumAllScores(scores) {\n  return Object.keys(scores).map(function (cat) {\n    return scores[cat];\n  }).reduce(function (a, b) {\n    return a + b;\n  }, 0);\n};\n\nvar NumberInput = function NumberInput(_ref3) {\n  var value = _ref3.value,\n      currentScore = _ref3.currentScore,\n      setCurrentScore = _ref3.setCurrentScore,\n      category = _ref3.category;\n\n  var _useState6 = useState(value),\n      numberValue = _useState6[0],\n      setNumberValue = _useState6[1];\n\n  useEffect(function () {\n    setCurrentScore(Object.assign({}, currentScore, _defineProperty({}, category, value)));\n  }, []);\n\n  var onMinus = function onMinus() {\n    setCurrentScore(Object.assign({}, currentScore, _defineProperty({}, category, numberValue - 5)));\n    if (!(numberValue <= 0)) setNumberValue(numberValue - 5);\n  };\n\n  var onPlus = function onPlus() {\n    setCurrentScore(Object.assign({}, currentScore, _defineProperty({}, category, numberValue + 5)));\n    if (!(numberValue >= 10)) setNumberValue(numberValue + 5);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(StyledIncrementButton, {\n    disabled: numberValue === 0,\n    onClick: function onClick() {\n      return onMinus();\n    }\n  }, \"-\"), numberValue, __jsx(StyledIncrementButton, {\n    disabled: numberValue === 10,\n    onClick: function onClick() {\n      return onPlus();\n    }\n  }, \"+\"));\n};\n\nvar sortUserList = function sortUserList(users, scoringId) {\n  var index = users.findIndex(function (user) {\n    return user.id === scoringId;\n  });\n\n  if (index != -1) {\n    var first = users.splice(index, 1)[0];\n    users.unshift(first);\n    return users;\n  }\n\n  return users;\n};\n\nexport default ResultsTable;","map":null,"metadata":{},"sourceType":"module"}