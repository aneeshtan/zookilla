{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { hri } from 'human-readable-ids';\nimport { Button, StyledInput, FlexColumn, FlexContainer } from './StyledComponents';\nimport { socket } from '../constants/websocket';\nvar FormContainer = styled.div.withConfig({\n  displayName: \"Create__FormContainer\",\n  componentId: \"sc-1xf6e0b-0\"\n})([\"max-width:500px;max-height:80vh;margin:auto;padding:20px;background:rgba(255,255,255,0.8);border-radius:10px;box-shadow:0 4px 6px rgba(0,0,0,0.1);overflow-y:auto;\"]);\nvar MultiSelect = styled.select.withConfig({\n  displayName: \"Create__MultiSelect\",\n  componentId: \"sc-1xf6e0b-1\"\n})([\"width:100%;padding:10px;margin:10px 0;border-radius:5px;border:1px solid #ccc;background-color:white;box-sizing:border-box;height:150px;overflow-y:auto;\"]);\nvar Select = styled.select.withConfig({\n  displayName: \"Create__Select\",\n  componentId: \"sc-1xf6e0b-2\"\n})([\"width:100%;padding:10px;margin:10px 0;border-radius:5px;border:1px solid #ccc;background-color:white;box-sizing:border-box;\"]);\nvar CheckBoxContainer = styled.div.withConfig({\n  displayName: \"Create__CheckBoxContainer\",\n  componentId: \"sc-1xf6e0b-3\"\n})([\"margin:0 20px 20px 0;\"]);\n\nvar Create = function Create(_ref) {\n  var cancel = _ref.cancel,\n      setGameData = _ref.setGameData,\n      setGamePlaying = _ref.setGamePlaying;\n\n  var _useState = useState(''),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState(\"5\"),\n      rounds = _useState2[0],\n      setRounds = _useState2[1];\n\n  var _useState3 = useState(\"ai\"),\n      scoringType = _useState3[0],\n      setScoringType = _useState3[1];\n\n  var _useState4 = useState({\n    Name: true,\n    Place: true,\n    Animal: true,\n    Thing: true,\n    Songs: false,\n    Movies: false,\n    \"TV shows\": false,\n    Fruits: false,\n    //Vegetables: false,\n    Books: false,\n    //Subjects: false,\n    Celebrities: false,\n    Musicians: false,\n    Instruments: false\n  }),\n      categories = _useState4[0],\n      setCategories = _useState4[1];\n\n  var generateRandomCode = function generateRandomCode(length) {\n    var code = '';\n\n    for (var i = 0; i < length; i++) {\n      code += Math.floor(Math.random() * 10); // Generate a random digit\n    }\n\n    return code;\n  }; // Monzo easter egg\n\n\n  useEffect(function () {\n    if (name === \"Monzo\") {\n      setCategories(Object.assign({}, categories, {\n        \"Office Dog Breeds\": false,\n        \"Meeting Rooms\": false,\n        \"Badge Types\": false,\n        \"Activity Types\": false,\n        \"Engineers\": false,\n        \"Data Scientists\": false\n      }));\n    }\n  }, [name]);\n  var categoriesArray = Object.keys(categories);\n  var options = [\"5\", \"7\", \"10\"];\n  var gameData = {\n    name: name,\n    isAdmin: true\n  };\n\n  var handleCreateGame = function handleCreateGame(code) {\n    var cats = [];\n    categoriesArray.forEach(function (cat) {\n      if (categories[cat]) cats.push(cat);\n    });\n    socket.emit('create', {\n      name: name,\n      code: code,\n      rounds: rounds,\n      categories: cats,\n      scoringType: scoringType\n    }, function (_ref2) {\n      var error = _ref2.error,\n          users = _ref2.users;\n\n      if (error) {\n        alert(error);\n      } else {\n        gameData.code = code;\n        gameData.users = users;\n        gameData.maxRounds = Number(rounds);\n        gameData.categories = cats;\n        setGameData(gameData);\n        setGamePlaying(true);\n      }\n    });\n  };\n\n  var disabled = !name || !checkAtleastOneSelected(categoriesArray, categories);\n\n  var _useState5 = useState([]),\n      selectedCategories = _useState5[0],\n      setSelectedCategories = _useState5[1];\n\n  useEffect(function () {\n    var defaultSelected = Object.keys(categories).filter(function (cat) {\n      return categories[cat];\n    });\n    setSelectedCategories(defaultSelected);\n  }, []); // Empty dependency array ensures this runs once on mount\n\n  return __jsx(FormContainer, null, __jsx(\"form\", null, __jsx(FlexColumn, null, __jsx(\"p\", null, __jsx(\"label\", {\n    htmlFor: \"name\"\n  }, \"Your Name:\"), __jsx(StyledInput, {\n    maxLength: \"15\",\n    name: \"name\",\n    type: \"text\",\n    onChange: function onChange(event) {\n      return setName(event.target.value);\n    }\n  })), __jsx(\"h4\", null, \"Number of rounds:\"), __jsx(FlexContainer, null, options.map(function (option) {\n    return __jsx(CheckBoxContainer, {\n      key: option\n    }, __jsx(\"input\", {\n      type: \"radio\",\n      id: option,\n      name: \"rounds\",\n      value: option,\n      onChange: function onChange(event) {\n        return setRounds(event.target.value);\n      },\n      checked: rounds === option\n    }), __jsx(\"label\", {\n      htmlFor: option\n    }, option));\n  })), __jsx(\"h4\", null, \"Select Topics:\"), __jsx(FlexContainer, {\n    style: {\n      maxWidth: \"450px\"\n    }\n  }, __jsx(MultiSelect, {\n    multiple: true,\n    value: selectedCategories,\n    onChange: function onChange(event) {\n      var selectedOptions = Array.from(event.target.selectedOptions, function (option) {\n        return option.value;\n      });\n      setSelectedCategories(selectedOptions);\n    }\n  }, Object.keys(categories).map(function (cat) {\n    return __jsx(\"option\", {\n      key: cat,\n      value: cat\n    }, cat);\n  }))), __jsx(FlexContainer, null, __jsx(Select, {\n    value: scoringType,\n    onChange: function onChange(event) {\n      return setScoringType(event.target.value);\n    }\n  }, __jsx(\"option\", {\n    value: \"cross\"\n  }, \"Score Each Other\"), __jsx(\"option\", {\n    value: \"self\"\n  }, \"Score Yourself\"), __jsx(\"option\", {\n    value: \"ai\"\n  }, \"Score by AI\"))), __jsx(Button, {\n    disabled: disabled,\n    fontSize: \"25px\",\n    padding: \"15px\",\n    minWidth: \"220px\",\n    onClick: function onClick(event) {\n      event.preventDefault(); //let code = hri.random();\n\n      var code = generateRandomCode(4); // Use your custom function here\n\n      handleCreateGame(code);\n    }\n  }, \"Create Room\")), __jsx(Button, {\n    fontSize: \"25px\",\n    padding: \"15px\",\n    minWidth: \"220px\",\n    onClick: function onClick() {\n      return cancel();\n    }\n  }, \"Cancel\")));\n};\n\nvar checkAtleastOneSelected = function checkAtleastOneSelected(categoriesList, categories) {\n  var enableButton = false;\n  categoriesList.forEach(function (category) {\n    if (categories[category]) {\n      enableButton = true;\n    }\n  });\n  return enableButton;\n};\n\nexport default Create;","map":null,"metadata":{},"sourceType":"module"}