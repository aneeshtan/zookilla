{"ast":null,"code":"var _jsxFileName = \"/Users/farshadghazanfari/Documents/www/npat/components/Create.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { hri } from 'human-readable-ids';\nimport { Button, StyledInput, FlexColumn, FlexContainer } from './StyledComponents';\nimport { socket } from '../constants/websocket';\nconst FormContainer = styled.div.withConfig({\n  displayName: \"Create__FormContainer\",\n  componentId: \"sc-1xf6e0b-0\"\n})([\"padding:20px;display:flex;flex-direction:column;align-items:center;text-align:center;width:100%;\"]);\nconst CheckBoxContainer = styled.label.withConfig({\n  displayName: \"Create__CheckBoxContainer\",\n  componentId: \"sc-1xf6e0b-1\"\n})([\"display:block;margin:10px;cursor:pointer;font-size:1rem;input{margin-right:5px;}@media (min-width:576px){display:flex;align-items:center;justify-content:center;}\"]);\nconst RadioGroup = styled.div.withConfig({\n  displayName: \"Create__RadioGroup\",\n  componentId: \"sc-1xf6e0b-2\"\n})([\"display:flex;flex-direction:column;align-items:center;justify-content:center;@media (min-width:576px){flex-direction:row;}\"]);\nconst CategoryContainer = styled.div.withConfig({\n  displayName: \"Create__CategoryContainer\",\n  componentId: \"sc-1xf6e0b-3\"\n})([\"display:grid;grid-template-columns:repeat(auto-fit,minmax(120px,1fr));gap:10px;margin-top:20px;width:100%;\"]);\n\nconst Create = ({\n  cancel,\n  setGameData,\n  setGamePlaying\n}) => {\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: rounds,\n    1: setRounds\n  } = useState(\"5\");\n  const {\n    0: scoringType,\n    1: setScoringType\n  } = useState(\"ai\");\n  const {\n    0: categories,\n    1: setCategories\n  } = useState({\n    Name: true,\n    Place: true,\n    Animal: true,\n    Thing: true,\n    Songs: false,\n    Movies: false,\n    \"TV shows\": false,\n    Fruits: false,\n    //Vegetables: false,\n    Books: false,\n    //Subjects: false,\n    Celebrities: false,\n    Musicians: false,\n    Instruments: false\n  });\n\n  const generateRandomCode = length => {\n    let code = '';\n\n    for (let i = 0; i < length; i++) {\n      code += Math.floor(Math.random() * 10); // Generate a random digit\n    }\n\n    return code;\n  }; // Monzo easter egg\n\n\n  useEffect(() => {\n    if (name === \"Monzo\") {\n      setCategories(Object.assign({}, categories, {\n        \"Office Dog Breeds\": false,\n        \"Meeting Rooms\": false,\n        \"Badge Types\": false,\n        \"Activity Types\": false,\n        \"Engineers\": false,\n        \"Data Scientists\": false\n      }));\n    }\n  }, [name]);\n  const categoriesArray = Object.keys(categories);\n  const options = [\"5\", \"7\", \"10\"];\n  const gameData = {\n    name,\n    isAdmin: true\n  };\n\n  const handleCreateGame = code => {\n    let cats = [];\n    categoriesArray.forEach(cat => {\n      if (categories[cat]) cats.push(cat);\n    });\n    socket.emit('create', {\n      name,\n      code,\n      rounds,\n      categories: cats,\n      scoringType\n    }, ({\n      error,\n      users\n    }) => {\n      if (error) {\n        alert(error);\n      } else {\n        gameData.code = code;\n        gameData.users = users;\n        gameData.maxRounds = Number(rounds);\n        gameData.categories = cats;\n        setGameData(gameData);\n        setGamePlaying(true);\n      }\n    });\n  };\n\n  let disabled = !name || !checkAtleastOneSelected(categoriesArray, categories);\n  return __jsx(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, __jsx(FlexColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"Your Name:\"), __jsx(StyledInput, {\n    maxLength: \"15\",\n    name: \"name\",\n    type: \"text\",\n    onChange: event => setName(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  })), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, \"Select number of rounds:\"), __jsx(RadioGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, options.map(option => __jsx(CheckBoxContainer, {\n    key: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    id: option,\n    name: \"rounds\",\n    value: option,\n    onChange: event => setRounds(event.target.value),\n    checked: rounds === option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }), option))), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, \"Select categories:\"), __jsx(CategoryContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, categoriesArray.map(cat => __jsx(CheckBoxContainer, {\n    key: cat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    id: cat,\n    name: \"categories\",\n    onChange: event => {\n      setCategories(_objectSpread({}, categories, {\n        [cat]: event.target.checked\n      }));\n    },\n    checked: categories[cat],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }), cat))), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, \"Scoring Rules:\"), __jsx(RadioGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, __jsx(CheckBoxContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    id: \"cross\",\n    name: \"scoring\",\n    value: \"cross\",\n    onChange: event => setScoringType(event.target.value),\n    checked: scoringType === \"cross\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }), \"Score Each Other\"), __jsx(CheckBoxContainer, {\n    key: \"self\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    id: \"self\",\n    name: \"scoring\",\n    value: \"self\",\n    onChange: event => setScoringType(event.target.value),\n    checked: scoringType === \"self\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }), \"Score Yourself\"), __jsx(CheckBoxContainer, {\n    key: \"ai\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    id: \"ai\",\n    name: \"scoring\",\n    value: \"ai\",\n    onChange: event => setScoringType(event.target.value),\n    checked: scoringType === \"ai\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }), \"Score by AI\")), __jsx(Button, {\n    disabled: disabled,\n    fontSize: \"25px\",\n    padding: \"15px\",\n    minWidth: \"220px\",\n    onClick: event => {\n      event.preventDefault();\n      let code = generateRandomCode(4); // Use your custom function here\n\n      handleCreateGame(code);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, \"Create Room\"), __jsx(Button, {\n    fontSize: \"25px\",\n    padding: \"15px\",\n    minWidth: \"220px\",\n    onClick: () => cancel(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))));\n};\n\nconst checkAtleastOneSelected = (categoriesList, categories) => {\n  let enableButton = false;\n  categoriesList.forEach(category => {\n    if (categories[category]) {\n      enableButton = true;\n    }\n  });\n  return enableButton;\n};\n\nexport default Create;","map":{"version":3,"sources":["/Users/farshadghazanfari/Documents/www/npat/components/Create.js"],"names":["React","useState","useEffect","styled","hri","Button","StyledInput","FlexColumn","FlexContainer","socket","FormContainer","div","CheckBoxContainer","label","RadioGroup","CategoryContainer","Create","cancel","setGameData","setGamePlaying","name","setName","rounds","setRounds","scoringType","setScoringType","categories","setCategories","Name","Place","Animal","Thing","Songs","Movies","Fruits","Books","Celebrities","Musicians","Instruments","generateRandomCode","length","code","i","Math","floor","random","Object","assign","categoriesArray","keys","options","gameData","isAdmin","handleCreateGame","cats","forEach","cat","push","emit","error","users","alert","maxRounds","Number","disabled","checkAtleastOneSelected","event","target","value","map","option","checked","preventDefault","categoriesList","enableButton","category"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { hri } from 'human-readable-ids';\n\nimport { Button, StyledInput, FlexColumn, FlexContainer } from './StyledComponents'\nimport { socket } from '../constants/websocket'\n \nconst FormContainer = styled.div`\npadding: 20px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\ntext-align: center;\nwidth: 100%;\n`\n\nconst CheckBoxContainer = styled.label`\ndisplay: block;\nmargin: 10px;\ncursor: pointer;\nfont-size: 1rem;\n\ninput {\n  margin-right: 5px;\n}\n\n@media (min-width: 576px) {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n`\n\nconst RadioGroup = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: center;\n\n@media (min-width: 576px) {\n  flex-direction: row;\n}\n`\n\nconst CategoryContainer = styled.div`\ndisplay: grid;\ngrid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\ngap: 10px;\nmargin-top: 20px;\nwidth: 100%;\n`\n\nconst Create = ({ cancel, setGameData, setGamePlaying }) => {\n  const [name, setName] = useState('');\n  const [rounds, setRounds] = useState(\"5\");\n  const [scoringType, setScoringType] = useState(\"ai\");\n  const [categories, setCategories] = useState({\n    Name: true,\n    Place: true,\n    Animal: true,\n    Thing: true,\n    Songs: false,\n    Movies: false,\n    \"TV shows\": false,\n    Fruits: false,\n    //Vegetables: false,\n    Books: false,\n    //Subjects: false,\n    Celebrities: false,\n    Musicians: false,\n    Instruments: false\n  })\n\n  const generateRandomCode = (length) => {\n    let code = '';\n    for (let i = 0; i < length; i++) {\n        code += Math.floor(Math.random() * 10); // Generate a random digit\n    }\n    return code;\n  }\n\n  // Monzo easter egg\n  useEffect(() => {\n    if (name === \"Monzo\") {\n      setCategories(Object.assign({}, categories, {\n        \"Office Dog Breeds\": false,\n        \"Meeting Rooms\": false,\n        \"Badge Types\": false,\n        \"Activity Types\": false,\n        \"Engineers\": false,\n        \"Data Scientists\": false\n      }))\n    }\n\n  }, [name])\n\n  const categoriesArray = Object.keys(categories);\n\n  const options = [\"5\", \"7\", \"10\"]\n  const gameData = {\n    name, isAdmin: true\n  }\n\n  const handleCreateGame = (code) => {\n    let cats = [];\n    categoriesArray.forEach(cat => {\n      if (categories[cat]) cats.push(cat);\n    });\n\n    socket.emit('create', { name, code, rounds, categories: cats, scoringType }, ({ error, users }) => {\n      if (error) {\n         \n        alert(error);\n      } else {\n        gameData.code = code;\n        gameData.users = users;\n        gameData.maxRounds = Number(rounds);\n        gameData.categories = cats;\n        setGameData(gameData)\n        setGamePlaying(true)\n      }\n    });\n  }\n\n  let disabled = !name || !checkAtleastOneSelected(categoriesArray, categories)\n\n  return (\n    <FormContainer>\n      <form>\n        <FlexColumn>\n          <p>\n            <label htmlFor=\"name\">Your Name:</label>\n            <StyledInput maxLength=\"15\" name=\"name\" type=\"text\" onChange={(event) => setName(event.target.value)} />\n          </p>\n          {/* Number of rounds */}\n          <h2>Select number of rounds:</h2>\n          <RadioGroup>\n            {options.map(option => (\n              <CheckBoxContainer key={option}>\n                <input type=\"radio\" id={option} name=\"rounds\" value={option} onChange={(event) => setRounds(event.target.value)} checked={rounds === option} />\n                {option}\n              </CheckBoxContainer>\n            ))}\n          </RadioGroup>\n\n          {/* Categories */}\n          <h2>Select categories:</h2>\n          <CategoryContainer>\n            {categoriesArray.map(cat => (\n              <CheckBoxContainer key={cat}>\n                <input type=\"checkbox\" id={cat} name=\"categories\" onChange={(event) => {\n                  setCategories({ ...categories, [cat]: event.target.checked })\n                }} checked={categories[cat]} />\n                {cat}\n              </CheckBoxContainer>\n            ))}\n          </CategoryContainer>\n\n          {/* Scoring rules */}\n          <h2>Scoring Rules:</h2>\n          <RadioGroup>\n            <CheckBoxContainer>\n              <input type=\"radio\" id=\"cross\" name=\"scoring\" value=\"cross\" onChange={(event) => setScoringType(event.target.value)} checked={scoringType === \"cross\"} />\n              Score Each Other\n            </CheckBoxContainer>\n            <CheckBoxContainer key=\"self\">\n              <input type=\"radio\" id=\"self\" name=\"scoring\" value=\"self\" onChange={(event) => setScoringType(event.target.value)} checked={scoringType === \"self\"} />\n              Score Yourself\n            </CheckBoxContainer>\n            <CheckBoxContainer key=\"ai\">\n              <input type=\"radio\" id=\"ai\" name=\"scoring\" value=\"ai\" onChange={(event) => setScoringType(event.target.value)} checked={scoringType === \"ai\"} />\n              Score by AI\n            </CheckBoxContainer>\n          </RadioGroup>\n\n          {/* Create and Cancel buttons */}\n          <Button disabled={disabled} fontSize=\"25px\" padding=\"15px\" minWidth=\"220px\" onClick={(event) => {\n            event.preventDefault()\n            let code = generateRandomCode(4); // Use your custom function here\n            handleCreateGame(code);\n          }}>Create Room</Button>\n\n          <Button fontSize=\"25px\" padding=\"15px\" minWidth=\"220px\" onClick={() => cancel()}>Cancel</Button>\n    \n           </FlexColumn>\n      </form>\n    </FormContainer>\n  )\n}\n\n\nconst checkAtleastOneSelected = (categoriesList, categories) => {\n  let enableButton = false;\n  categoriesList.forEach(category => {\n    if (categories[category]) {\n      enableButton = true;\n    }\n  })\n  return enableButton\n}\n\nexport default Create"]},"metadata":{},"sourceType":"module"}