{"version":3,"file":"static/webpack/static/development/pages/index.js.f30020b68ba642503980.hot-update.js","sources":["webpack:///./components/Game/GameHeader.js","webpack:///./components/Landing.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  font-size: 15px;\n  @media(max-width: 500px) {\n\n  }\n`\n\nconst TimerValue = styled.span`\n  position: relative;\n  top: 48px;\n`\n\nconst TimerContainer = styled.div`\n  background-image: url('/assets/timer.png');\n  height: 100px;\n  background-size: 100px;\n  width: 100px;\n  text-align: center;\n  font-size: 1.3em;\n`\n\nconst RoundContainer = styled.div`\n  font-size: 1.8em;\n  position: relative;\n  top: 30px;\n  @media(max-width: 500px) {\n    font-size: 1em;\n  }\n  display: flex;\n  flex-direction: column;\n`\n\nconst BoldContent = styled.span`\n  color: red;\n  font-weight: bold;\n  font-size: 1.2em;\n`\nexport const  HelpIcon = styled.div`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  width: 40px;\n  height: 40px;\n  background-color: #007bff; /* Blue background */\n  color: white;\n  border-radius: 50%;\n  text-align: center;\n  line-height: 40px; /* Vertically center the question mark */\n  font-size: 20px;\n  cursor: pointer;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); /* Optional: adds shadow for depth */\n`;\n\nlet tickingSound;\n\nconst GameHeader = ({ roundNumber, timerValue, currentAlphabet, maxRounds, soundOn }) => {\n  useEffect(() => {\n    tickingSound = new Audio('/assets/audio/ticking-timer.wav');\n\n    tickingSound.load()\n    return function cleanup() {\n      pauseAudio(tickingSound)\n    };\n  }, []);\n\n  if (tickingSound && timerValue === 49 && soundOn) {\n    playAudio(tickingSound)\n  }\n\n  if (!soundOn || timerValue === 60) {\n    pauseAudio(tickingSound)\n  }\n\n  return <Container>\n    <RoundContainer>\n      <span>Round <BoldContent>{`#${roundNumber}/${maxRounds}`}</BoldContent></span>\n      <span>Current Alphabet: <BoldContent>{currentAlphabet || 'Not Selected'}</BoldContent></span>\n    </RoundContainer>\n    <TimerContainer><TimerValue>{timerValue}</TimerValue></TimerContainer>\n  </Container>\n}\n\nconst playAudio = (audio) => {\n  const audioPromise = audio.play()\n  if (audioPromise !== undefined) {\n    audioPromise\n      .then(_ => {\n        // autoplay started\n      })\n      .catch(err => {\n        // catch dom exception\n        console.info(err)\n      })\n  }\n}\n\nconst pauseAudio = (audio) => {\n  const audioPromise = audio.pause()\n  if (audioPromise !== undefined) {\n    audioPromise\n      .then(_ => {\n        audio.load()\n      })\n      .catch(err => {\n        // catch dom exception\n        console.info(err)\n      })\n  }\n}\n\nexport default GameHeader;","import React, { useState } from 'react';\n\nimport Join from './Join';\nimport Create from './Create';\nimport Play from './Game/Play';\nimport Instructions from './Instructions';\nimport { HelpIcon } from './Game/GameHeader'; // Adjust the path as per your folder structure\n\nconst Landing = () => {\n  const [showJoinForm, toggleJoinForm] = useState(false);\n  const [showCreateForm, toggleCreateForm] = useState(false);\n  const [showInstructions, toggleInstructions] = useState(false);\n  const [isGamePlaying, setGamePlaying] = useState(false);\n  const [gameData, setGameData] = useState({});\n  const [soundOn, toggleSound] = useState(true);\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"text-center mt-5 mb-4\">\n        <h1 className=\"display-4\">Zookilla</h1>\n      </div>\n      <div className=\"d-flex flex-column align-items-center justify-content-center\">\n        <div className=\"card bg-light text-dark mb-3\">\n          <div className=\"card-body\">\n            {isGamePlaying ? (\n              <Play soundOn={soundOn} setGamePlaying={setGamePlaying} gameData={gameData} />\n            ) : showInstructions ? (\n              <Instructions cancel={() => toggleInstructions(false)} />\n            ) : (\n              <>\n                {!showJoinForm && !showCreateForm && (\n                  <div className=\"button-container\">\n                    <button className=\"btn btn-success my-3 mx-2\" onClick={() => {\n                      toggleJoinForm(true);\n                      toggleCreateForm(false);\n                    }}>\n                      Join Existing Game\n                    </button>\n                    <button className=\"btn btn-danger my-3 mx-2\" onClick={() => {\n                      toggleJoinForm(false);\n                      toggleCreateForm(true);\n                    }}>\n                      Create New Game\n                    </button>\n                  </div>\n                )}\n                {showJoinForm && <Join cancel={toggleJoinForm} setGamePlaying={setGamePlaying} setGameData={setGameData} />}\n                {showCreateForm && <Create setGamePlaying={setGamePlaying} setGameData={setGameData} cancel={toggleCreateForm} />}\n              </>\n            )}\n          </div>\n        </div>\n        <HelpIcon onClick={() => toggleInstructions(true)}>\n        ?\n      </HelpIcon>\n\n\n      </div>\n      {/* Additional components or footer */}\n    </div>\n  );\n};\n\nexport default Landing;\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAgBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACrHA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;;;;A","sourceRoot":""}