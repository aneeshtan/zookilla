{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/Create.js","webpack:///./components/Game/FinalScreen.js","webpack:///./components/Game/GameHeader.js","webpack:///./components/Game/InputTable.js","webpack:///./components/Game/Play.js","webpack:///./components/Game/PlayerList.js","webpack:///./components/Game/ResultsTable.js","webpack:///./components/Game/ScoreTable.js","webpack:///./components/Game/StartGameScreen.js","webpack:///./components/Instructions.js","webpack:///./components/Join.js","webpack:///./components/Landing.js","webpack:///./components/StyledComponents.js","webpack:///./constants/theme.js","webpack:///./constants/websocket.js","webpack:///./pages/index.js","webpack:///external \"clipboard-copy\"","webpack:///external \"human-readable-ids\"","webpack:///external \"next/head\"","webpack:///external \"papaparse\"","webpack:///external \"react\"","webpack:///external \"socket.io-client\"","webpack:///external \"styled-components\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { hri } from 'human-readable-ids';\n\nimport { Button, StyledInput, FlexColumn, FlexContainer } from './StyledComponents'\nimport { socket } from '../constants/websocket'\n\nconst FormContainer = styled.div`\n  padding: 40px;\n  padding-top: 30px;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n`\n\nconst CheckBoxContainer = styled.div`\n  margin: 0 20px 20px 0;\n`\n\nconst Create = ({ cancel, setGameData, setGamePlaying }) => {\n  const [name, setName] = useState('');\n  const [rounds, setRounds] = useState(\"5\");\n  const [scoringType, setScoringType] = useState(\"ai\");\n  const [categories, setCategories] = useState({\n    Name: true,\n    Place: true,\n    Animal: true,\n    Thing: true,\n    Songs: false,\n    Movies: false,\n    \"TV shows\": false,\n    Fruits: false,\n    Vegetables: false,\n    Books: false,\n    Subjects: false,\n    Celebrities: false,\n    Musicians: false,\n    Instruments: false\n  })\n\n  const generateRandomCode = (length) => {\n    let code = '';\n    for (let i = 0; i < length; i++) {\n        code += Math.floor(Math.random() * 10); // Generate a random digit\n    }\n    return code;\n  }\n\n  // Monzo easter egg\n  useEffect(() => {\n    if (name === \"Monzo\") {\n      setCategories(Object.assign({}, categories, {\n        \"Office Dog Breeds\": false,\n        \"Meeting Rooms\": false,\n        \"Badge Types\": false,\n        \"Activity Types\": false,\n        \"Engineers\": false,\n        \"Data Scientists\": false\n      }))\n    }\n\n  }, [name])\n\n  const categoriesArray = Object.keys(categories);\n\n  const options = [\"5\", \"7\", \"10\"]\n  const gameData = {\n    name, isAdmin: true\n  }\n\n  const handleCreateGame = (code) => {\n    let cats = [];\n    categoriesArray.forEach(cat => {\n      if (categories[cat]) cats.push(cat);\n    });\n\n    socket.emit('create', { name, code, rounds, categories: cats, scoringType }, ({ error, users }) => {\n      if (error) {\n         \n        alert(error);\n      } else {\n        gameData.code = code;\n        gameData.users = users;\n        gameData.maxRounds = Number(rounds);\n        gameData.categories = cats;\n        setGameData(gameData)\n        setGamePlaying(true)\n      }\n    });\n  }\n\n  let disabled = !name || !checkAtleastOneSelected(categoriesArray, categories)\n\n  return (\n    <FormContainer>\n      <form>\n        <FlexColumn>\n          <p>\n            <label htmlFor=\"name\">Your Name:</label>\n            <StyledInput maxLength=\"15\" name=\"name\" type=\"text\" onChange={(event) => setName(event.target.value)} />\n          </p>\n          <h2>Select number of rounds:</h2>\n          <FlexContainer>\n            {options.map(option => <CheckBoxContainer key={option}>\n              <input type=\"radio\" id={option} name=\"rounds\" value={option} onChange={(event) => setRounds(event.target.value)} checked={rounds === option} />\n              <label htmlFor={option}>{option}</label>\n            </CheckBoxContainer>)}\n          </FlexContainer>\n          <h2>Select categories:</h2>\n          <FlexContainer style={{ maxWidth: \"450px\" }}>\n            {categoriesArray.map(cat => <CheckBoxContainer key={cat}>\n              <input type=\"checkbox\" id={cat} name=\"categories\" onChange={(event) => {\n                setCategories(Object.assign({}, categories, { [cat]: event.target.checked }))\n              }} checked={categories[cat]} />\n              <label htmlFor={cat}>{cat}</label>\n            </CheckBoxContainer>)}\n          </FlexContainer>\n          <h2>Scoring Rules:</h2>\n          <FlexContainer>\n            <CheckBoxContainer>\n              <input type=\"radio\" id=\"cross\" name=\"scoring\" value=\"cross\" onChange={(event) => setScoringType(event.target.value)} checked={scoringType === \"cross\"} />\n              <label htmlFor=\"cross\">Score Each Other</label>\n            </CheckBoxContainer>\n            <CheckBoxContainer key=\"self\">\n              <input type=\"radio\" id=\"self\" name=\"scoring\" value=\"self\" onChange={(event) => setScoringType(event.target.value)} checked={scoringType === \"self\"} />\n              <label htmlFor=\"self\">Score Yourself</label>\n            </CheckBoxContainer>\n            <CheckBoxContainer key=\"ai\">\n              <input type=\"radio\" id=\"ai\" name=\"scoring\" value=\"ai\" onChange={(event) => setScoringType(event.target.value)} checked={scoringType === \"ai\"} />\n              <label htmlFor=\"ai\">Score by AI</label>\n            </CheckBoxContainer>\n\n          </FlexContainer>\n          <Button disabled={disabled} fontSize=\"25px\" padding=\"15px\" minWidth=\"220px\" onClick={(event) => {\n\n            event.preventDefault()\n            //let code = hri.random();\n            let code = generateRandomCode(6); // Use your custom function here\n\n            handleCreateGame(code);\n          }}>Create Room</Button>\n        </FlexColumn>\n        <Button fontSize=\"25px\" padding=\"15px\" minWidth=\"220px\" onClick={() => cancel()}>Cancel</Button>\n      </form>\n    </FormContainer>\n  )\n}\n\n\nconst checkAtleastOneSelected = (categoriesList, categories) => {\n  let enableButton = false;\n  categoriesList.forEach(category => {\n    if (categories[category]) {\n      enableButton = true;\n    }\n  })\n  return enableButton\n}\n\nexport default Create","import React from 'react';\n\nimport { avatars } from '../../constants/theme'\nimport { Button, FlexContainer, FlexColumn } from '../StyledComponents'\n\nconst FinalScreen = ({ scores, handleRestartGame }) => {\n  let winner = {\n    score: 0,\n  };\n  scores.forEach(score => {\n    if (score.score > winner.score) winner = {\n      score: score.score,\n      name: score.name\n    }\n  })\n\n\n  return <FlexColumn>\n    <h2>Final Scores</h2>\n    <FlexContainer>\n      {scores.map(user => {\n        return <div style={{ margin: \"0 20px\", textAlign: \"center\" }} key={user.name}>\n          <img alt={`${user.name} avatar`} src={avatars[user.avatarId]} width={60} height={60} />\n          <p>{user.name}: {user.score}</p>\n        </div>\n      })\n      }\n    </FlexContainer>\n    <h2 style={{ textAlign: \"center\" }}>{`🎉🎉 The winner is: ${winner.name || 'No winner!'} 🎉🎉`}</h2>\n    {<Button fontSize=\"25px\" padding=\"15px\" minWidth=\"220px\" onClick={(event) => {\n      event.preventDefault()\n      handleRestartGame(event)\n    }}>Play Again</Button>}\n  </FlexColumn >\n}\n\nexport default FinalScreen","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  font-size: 15px;\n  @media(max-width: 500px) {\n\n  }\n`\n\nconst TimerValue = styled.span`\n  position: relative;\n  top: 48px;\n`\n\nconst TimerContainer = styled.div`\n  background-image: url('/assets/timer.png');\n  height: 100px;\n  background-size: 100px;\n  width: 100px;\n  text-align: center;\n  font-size: 1.3em;\n`\n\nconst RoundContainer = styled.div`\n  font-size: 1.8em;\n  position: relative;\n  top: 30px;\n  @media(max-width: 500px) {\n    font-size: 1em;\n  }\n  display: flex;\n  flex-direction: column;\n`\n\nconst BoldContent = styled.span`\n  color: red;\n  font-weight: bold;\n  font-size: 1.2em;\n`\nexport const HelpIcon = styled.div`\n  position: fixed;\n  bottom: 70px;\n  right: 20px;\n  width: 40px;\n  height: 40px;\n  background-color: #007bff; /* Blue background */\n  color: white;\n  border-radius: 50%;\n  text-align: center;\n  line-height: 40px; /* Vertically center the question mark */\n  font-size: 20px;\n  cursor: pointer;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); /* Optional: adds shadow for depth */\n`;\n\nlet tickingSound;\n\nconst GameHeader = ({ roundNumber, timerValue, currentAlphabet, maxRounds, soundOn }) => {\n  useEffect(() => {\n    tickingSound = new Audio('/assets/audio/ticking-timer.wav');\n\n    tickingSound.load()\n    return function cleanup() {\n      pauseAudio(tickingSound)\n    };\n  }, []);\n\n  if (tickingSound && timerValue === 49 && soundOn) {\n    playAudio(tickingSound)\n  }\n\n  if (!soundOn || timerValue === 60) {\n    pauseAudio(tickingSound)\n  }\n\n  return <Container>\n    <RoundContainer>\n      <span>Round <BoldContent>{`#${roundNumber}/${maxRounds}`}</BoldContent></span>\n      <span>Current Alphabet: <BoldContent>{currentAlphabet || 'Not Selected'}</BoldContent></span>\n    </RoundContainer>\n    <TimerContainer><TimerValue>{timerValue}</TimerValue></TimerContainer>\n  </Container>\n}\n\nconst playAudio = (audio) => {\n  const audioPromise = audio.play()\n  if (audioPromise !== undefined) {\n    audioPromise\n      .then(_ => {\n        // autoplay started\n      })\n      .catch(err => {\n        // catch dom exception\n        console.info(err)\n      })\n  }\n}\n\nconst pauseAudio = (audio) => {\n  const audioPromise = audio.pause()\n  if (audioPromise !== undefined) {\n    audioPromise\n      .then(_ => {\n        audio.load()\n      })\n      .catch(err => {\n        // catch dom exception\n        console.info(err)\n      })\n  }\n}\n\nexport default GameHeader;","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { StyledInput, Button } from '../StyledComponents'\n\nconst TableContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  @media (max-width: 768px) {\n    width: min-content;\n  }\n`\n\nconst Paper = styled.div`\n  background: white;\n  background-image:\n    linear-gradient(90deg, transparent 79px, #abced4 79px, #abced4 81px, transparent 81px),\n    linear-gradient(#eee .1em, transparent .1em);\n  background-size: 100% 1.2em;\n  width: 480px;\n  height: auto;\n  padding: 30px 30px 30px 110px;\n  margin: 0 auto;\n  margin-top: 50px;\n  box-shadow: #9e9e9e70 11px 8px 12px;\n  @media (max-width: 768px) {\n    box-shadow: gray 0px 0px;\n    width: 180px;\n    padding: 30px 30px 30px 80px;\n    background-image:\n    linear-gradient(90deg, transparent 49px, #abced4 49px, #abced4 51px, transparent 51px),\n    linear-gradient(#eee .1em, transparent .1em);\n  }\n  text-align: center;\n`\n\nconst InputTable = ({ sendResponse, timerValue, categories }) => {\n  const [response, setResponse] = useState({});\n\n  if (timerValue === 60) {\n    sendResponse(response)\n  }\n  return <Paper>\n    <form>\n      <TableContainer>\n        {categories.map(cat => <span key={cat}>\n          <label style={{ display: 'none' }} htmlFor={cat}>{`${cat}:`}</label>\n          <StyledInput placeholder={cat} maxLength=\"30\" name={cat} type=\"text\" onChange={(event) => {\n            setResponse(Object.assign({}, response, { [cat]: event.target.value }))\n          }} />\n        </span>)}\n      </TableContainer>\n      <Button style={{ background: 'red' }} onClick={(event) => {\n        event.preventDefault()\n        sendResponse(response)\n      }}>🚌 Stop the Bus</Button>\n    </form>\n  </Paper>\n}\n\nexport default InputTable;","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components'\n\nimport theme from '../../constants/theme'\nimport { socket } from '../../constants/websocket'\nimport { FlexContainer, Spinner, ExitButton, ExitButtonContainer } from '../StyledComponents'\n\nimport InputTable from './InputTable'\nimport ResultsTable from './ResultsTable'\nimport ScoreTable from './ScoreTable'\nimport ActivePlayers from './PlayerList'\nimport GameHeader from './GameHeader'\nimport FinalScreen from './FinalScreen'\nimport StartGameScreen from './StartGameScreen'\n\nconst Container = styled.div`\n  font-family: ${theme.font};\n  padding-top: 80px;\n`\n\nconst Play = ({ gameData, setGamePlaying, soundOn }) => {\n  const [users, setUsers] = useState([]);\n  const [code, setCode] = useState('');\n  const [currentGameRound, setCurrentGameRound] = useState(1);\n  const [responseSubmitted, setResponseSubmitted] = useState(false);\n  const [scoreSubmitted, setScoreSubmitted] = useState(false);\n  const [allScoresCollected, setAllScoresCollected] = useState(false);\n  const [allResponsesCollected, setAllResponsesCollected] = useState(false);\n  const [currentAlphabet, setCurrentAlphabet] = useState('')\n  const [gameState, setGameState] = useState({});\n  const [gameStarted, startGame] = useState(false);\n  const [timerValue, setTimerValue] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [gameEnded, setGameEnded] = useState(false);\n  const [finalScores, setFinalScores] = useState([]);\n  const [maxRounds, setMaxRounds] = useState(0);\n  const [categories, setCategories] = useState([])\n  const [isAdmin, setAdmin] = useState(gameData.isAdmin)\n  const [scorePartner, setScorePartner] = useState({})\n\n\n  // const isAdmin = gameData.isAdmin;\n\n  useEffect(() => {\n    const { code, users, maxRounds, categories } = gameData;\n    setUsers(users);\n    setCode(code);\n    setMaxRounds(Number(maxRounds))\n    setCategories(categories)\n\n  }, [gameData]);\n\n  useEffect(() => {\n    socket.on(\"restartGame\", () => {\n      setFinalScores([]);\n      setGameEnded(false);\n    })\n\n    socket.on(\"gameData\", ({ users }) => {\n      setUsers(users);\n    });\n\n    socket.on(\"allSubmitted\", ({ gameState, scorePartners }) => {\n      setGameState(Object.assign({}, gameState))\n      scorePartners.forEach(scorePartner => {\n        if (scorePartner[0].id === socket.id) {\n          setScorePartner(scorePartner[1])\n        }\n      })\n      setAllResponsesCollected(true)\n    })\n\n    socket.on(\"allScoresSubmitted\", ({ gameState }) => {\n      setGameState(Object.assign({}, gameState))\n      setAllScoresCollected(true)\n    })\n\n    socket.on(\"allPlayersReady\", ({ gameState }) => {\n      setLoading(true)\n      setGameState(Object.assign({}, gameState))\n      setCurrentGameRound(gameState.currentRound);\n      setResponseSubmitted(false);\n      setAllResponsesCollected(false);\n      setAllScoresCollected(false);\n      setScoreSubmitted(false);\n      setTimerValue(0)\n      setCurrentAlphabet(gameState.currentAlphabet)\n      setLoading(false)\n    })\n\n    socket.on(\"gameStarted\", ({ gameState }) => {\n      startGame(gameState.started);\n      setCurrentAlphabet(gameState.currentAlphabet)\n    });\n\n    socket.on(\"gameEnded\", ({ scores, gameState }) => {\n      setLoading(true)\n      setGameState(Object.assign({}, gameState))\n      setCurrentGameRound(1);\n      setResponseSubmitted(false);\n      setAllResponsesCollected(false);\n      setAllScoresCollected(false);\n      setScoreSubmitted(false);\n      setTimerValue(0)\n      setCurrentAlphabet('')\n      setGameEnded(true)\n      startGame(false)\n      setLoading(false)\n      setUsers(gameState.users)\n      // New person who starts the game will be admin\n      setAdmin(false);\n      setFinalScores(scores)\n    });\n\n\n    socket.on(\"timerValue\", ({ timer }) => {\n      setTimerValue(timer)\n    })\n  }, []);\n\n  // Sumbit users respnse\n  const sendResponse = (response) => {\n    // forEach category, make a response object\n    socket.emit('sendResponse', { code, response, round: currentGameRound }, () => {\n      setResponseSubmitted(true)\n      socket.emit('stopTimer', { code })\n    })\n  }\n\n  const handleSubmitScore = (score, id) => {\n    let submitScore;\n    submitScore = score ? score : 0;\n    socket.emit('sendScore', { id, code, score: submitScore, round: currentGameRound }, ({ error, gameState }) => {\n      if (error) alert(error)\n      else if (gameState) {\n        setScoreSubmitted(true)\n      }\n    })\n  }\n\n  const handleStartGame = () => {\n    socket.emit('startGame', { code }, (gameState) => {\n      if (gameState) {\n        startGame(gameState.started)\n        setLoading(false)\n      }\n    })\n  }\n\n  const handleRestartGame = (event) => {\n    event.preventDefault()\n    startGame(false);\n    socket.emit('restartGame', { code }, () => {\n      setFinalScores([]);\n      setGameEnded(false);\n      setAdmin(true);\n    })\n\n  }\n\n  const handleStartNextRound = () => {\n    // If everyone is ready to start next round, then start next round \n    socket.emit('playerReady', { code, round: currentGameRound }, ({ gameState }) => {\n      if (gameState) {\n\n      }\n    })\n  }\n\n  const renderGameState = () => {\n    if (loading) return <FlexContainer><Spinner /></FlexContainer>\n    if (gameEnded) return <FinalScreen handleRestartGame={handleRestartGame} scores={finalScores} />\n    if (!gameStarted) return <StartGameScreen handleStartGame={handleStartGame} isAdmin={isAdmin} />\n    else if (allScoresCollected)\n      return <ScoreTable maxRounds={maxRounds} handleStartNextRound={handleStartNextRound} round={currentGameRound} gameState={gameState} />\n    else if (responseSubmitted && !allResponsesCollected)\n      return <FlexContainer><Spinner /></FlexContainer>\n    else if (allResponsesCollected)\n      return <ResultsTable scorePartner={scorePartner} scoreSubmitted={scoreSubmitted} handleSubmitScore={handleSubmitScore} round={currentGameRound} gameState={gameState} />\n    else\n      return <>\n        {(gameStarted) ? <GameHeader soundOn={soundOn} maxRounds={maxRounds} timerValue={timerValue} roundNumber={currentGameRound} currentAlphabet={currentAlphabet} /> : false}\n        <InputTable categories={categories} timerValue={timerValue} sendResponse={sendResponse} />\n      </>\n  }\n\n  return <Container>\n    <ExitButtonContainer><ExitButton onClick={() => {\n      socket.emit('removeUserFromGame', { code }, () => {\n        setGamePlaying(false)\n      })\n    }}>X</ExitButton></ExitButtonContainer>\n    {!gameEnded && <ActivePlayers code={code} gameStarted={gameStarted || gameEnded} users={users} />}\n    {renderGameState()}\n  </Container>\n}\n\nexport default Play;","import React, { useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport theme, { avatars } from '../../constants/theme'\nimport { FlexContainer } from '../StyledComponents'\n\nimport copy from 'clipboard-copy';\n\nconst ActivePlayers = ({ users, gameStarted, code }) => {\n  const width = gameStarted ? 30 : 60;\n  const height = width;\n  const [copiedString, setCopiedString] = useState('Copy')\n\n  return <>\n    {!gameStarted && <div style={{ textAlign: \"center\", padding: \"20px 20px 20px 20px\" }}><div style={{ padding: \"10px\" }}>\n      Your Game Code is:\n      <div>\n        <GameCode>{` `}{code}</GameCode>\n        <CopyButton disabled={copiedString === \"Copied!\"} onClick={() => {\n          copy(code).then(() => setCopiedString('Copied!'))\n        }}>{copiedString}</CopyButton>\n      </div>\n      Send it to your friends to start the game!\n    </div>\n    </div>}\n    <Container>\n      {!gameStarted && <h1>Who's Playing?</h1>}\n      <FlexContainer>{\n        users.map((user, i) => <UserContainer gameStarted={gameStarted} key={user.id}>\n          <img alt={`${user.name} avatar`} width={width} height={height} src={avatars[user.avatarIndex || i]} />\n          {gameStarted && <h4>{user.name}</h4>}\n          {!gameStarted && <h2>{user.name}</h2>}\n        </UserContainer>)\n      }</FlexContainer></Container></>\n}\n\n// Styles\nconst Container = styled.div`\n  text-align: center;\n  color: ${theme.colors.red}\n`\n// Create the keyframes\nconst flicker = keyframes`\n  from {\n    transform: rotate(-2deg);\n  }\n\n  to {\n    transform: rotate(8deg);\n  }\n`;\n\nconst CopyButton = styled.button`\n  margin: 5px;\n  margin-left: 10px;\n  padding: 5px 10px;\n  font-size: 20px;\n  color: white;\n  border: none;\n  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n  background-color: ${props => props.disabled ? 'grey' : theme.colors.blue};\n  font-family: ${theme.font};\n  `\n\n\nconst GameCode = styled.span`\n  color: ${theme.colors.red};\n  font-weight: bold;\n  font-size: 1.5em;\n`\n\nconst UserContainer = styled.div`\n  display: flex;\n  animation: ${props => !props.gameStarted && flicker} 1s cubic-bezier(1,-1, 0, 2) infinite;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 20px;\n  color: black;\n`\n\nexport default ActivePlayers;","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Button, Spinner, FlexColumn, FlexContainer } from '../StyledComponents'\nimport theme from '../../constants/theme'\nimport { socket } from '../../constants/websocket'\nimport Papa from 'papaparse';\n\nconst TableContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`\n\nconst Container = styled.div`\n  padding: 20px 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  flex-wrap: wrap;\n`\n\nconst Paper = styled.div`\n  background: white;\n  background-size: 100% 1.2em;\n  height: auto;\n  margin: 0 auto;\n  margin-top: 30px;\n  box-shadow: #9e9e9e63 6px 7px 14px 0px;\n  width: 250px;\n  padding: 30px 30px 30px 30px;\n  background-image:\n  linear-gradient(90deg, transparent 49px, transparent 49px, transparent 51px, transparent 51px),\n  linear-gradient(#eee .1em, transparent .1em);\n`\n\nconst Submission = styled.span`\n  color: ${theme.colors.blue};\n  word-break: break-all;\n`\n\nconst StyledIncrementButton = styled.button`\n  font-weight: bold;\n  font-size: 14px;\n  border: ${props => props.disabled ? '1px solid gray' : '1px solid black'};\n  color: ${props => props.disabled ? 'gray' : 'black'};\n  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n`\n\nconst InputContainer = styled.div`\n  margin-left: 15px;\n  font-size: 1.5em;\n  display: flex;\n  align-items: center;\n  width: 80px;\n  justify-content: space-between;\n`\n\nconst NumberContainer = styled.div`\n  margin-left: 15px;\n  font-size: 1.5em;\n  display: flex;\n  align-items: center;\n  width: 80px;\n  justify-content: center;\n`\n\nconst ResultsTable = ({ gameState, round, handleSubmitScore, scoreSubmitted, scorePartner }) => {\n  let initialScore = {}\n  const [scores, setScores] = useState({});\n  const [loading, setLoading] = useState(true);\n  const categories = gameState.categories;\n  let scoringId = gameState.scoringType === \"cross\" ? scorePartner.id : socket.id;\n  let users = sortUserList([...gameState.users], scoringId);\n\n  users.forEach(user => {\n    categories.forEach(cat => {\n      let similar = similarityCheck(cat, users, user.id, round)\n      if (user.id === scoringId && similar.value) {\n\n        initialScore = Object.assign({}, initialScore, { [cat]: 5 })\n      }\n    })\n  })\n\n  const [currentScore, setCurrentScore] = useState(initialScore);\n  const [animalsSet, setAnimalsSet] = useState(new Set());\n  const [namesSet, setNamesSet] = useState(new Set());\n  const [thingsSet, setThingsSet] = useState(new Set());\n  const [placesSet, setPlacesSet] = useState(new Set());\n\n  const parseCSV = async (filePath) => {\n    const response = await fetch(filePath);\n    const reader = response.body.getReader();\n    const result = await reader.read();\n    const decoder = new TextDecoder('utf-8');\n    const csv = decoder.decode(result.value);\n    return new Promise((resolve, reject) => {\n      Papa.parse(csv, {\n        complete: (results) => {\n          resolve(results.data.map(row => row[0]));\n        },\n        error: reject\n      });\n    });\n  };\n\n\n  useEffect(() => {\n    parseCSV('/csv/animals.csv').then(data => {\n      setAnimalsSet(new Set(data.map(animal => animal.toLowerCase().trim())));\n    });\n    parseCSV('/csv/places.csv').then(data => {\n      setPlacesSet(new Set(data.map(place => place.toLowerCase().trim())));\n    });\n    parseCSV('/csv/names.csv').then(data => {\n      setNamesSet(new Set(data.map(names => names.toLowerCase().trim())));\n    });\n    parseCSV('/csv/things.csv').then(data => {\n      setThingsSet(new Set(data.map(thing => thing.toLowerCase().trim())));\n    });\n  }, []); // Empty dependency array to run only once on mount\n  \n\n  const scoreEntriesAI = async () => {\n\n    if (animalsSet.size === 0) {\n      console.log(\"Waiting for animalsSet to be populated...\");\n      return; // Exit if animalsSet is not ready\n    }\n\n    const newScores = {};\n    for (const category of categories) {\n      for (const user of gameState.users) {\n        const answer = user.responses[round][category];\n        if (answer) {\n          const score = await getScoreFromAPI(category, answer);\n          newScores[user.id] = { ...(newScores[user.id] || {}), [category]: score };\n        }\n      }\n    }\n    setScores(newScores);\n    setLoading(false);\n  };\n\n\n  const getScoreFromAPI = async (category, answer) => {\n    try {\n        const formattedAnswer = answer.toLowerCase().trim();\n        let categorySet;\n\n        switch (category) {\n            case 'Animal':\n                categorySet = animalsSet;\n                break;\n            case 'Name':\n                categorySet = namesSet;\n                break;\n            case 'Thing':\n                categorySet = thingsSet;\n                break;\n            case 'Place':\n                categorySet = placesSet;\n                break;\n            default:\n                return 0;\n        }\n\n        let isExactMatch = false;\n        let isSimilarMatch = false;\n\n        categorySet.forEach(item => {\n            if (formattedAnswer === item) {\n                isExactMatch = true;\n            } else if (formattedAnswer.includes(item) || item.includes(formattedAnswer)) {\n                isSimilarMatch = true;\n            }\n        });\n\n        if (isExactMatch) {\n            console.log(`'${formattedAnswer}' is an exact match in ${category}.`);\n            return 10; // Exact match\n        } else if (isSimilarMatch) {\n            console.log(`'${formattedAnswer}' is a similar match in ${category}.`);\n            return 5; // Similar match\n        } else {\n            console.log(`'${formattedAnswer}' is not found in the ${category} set.`);\n        }\n\n        return 0; // Answer is incorrect or not in the category\n    } catch (error) {\n        console.error(\"Error checking answer:\", error);\n        return 0;\n    }\n};\n\n\n\n  let totalScore = 0;\n  useEffect(() => {\n    if(gameState.scoringType === \"ai\" && animalsSet.size > 0) {\n      scoreEntriesAI();\n    }\n  }, [gameState, round, animalsSet, namesSet, thingsSet, placesSet]); // Add animalsSet as a dependency\n  \n\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  return <>\n\n{gameState.scoringType === \"ai\" ? ( \n  <TableContainer>\n  {gameState.users.map(user => (\n    <Paper key={user.id}>\n      <h2>{user.name}</h2>\n      {gameState.categories.map(category => (\n        <div key={category}>\n          {category}: <Submission>{user.responses[round][category] || '-'}</Submission>\n          <span>Score: {scores[user.id] && scores[user.id][category]}</span>\n        </div>\n      ))}\n      <h2>Total Score: {Object.values(scores[user.id] || {}).reduce((a, b) => a + b, 0)}</h2>\n    </Paper>\n  ))}\n</TableContainer>\n    ) : (\n      <>\n    {gameState.scoringType === \"cross\" ? <FlexContainer><h1>You are scoring for <Submission>{scorePartner.name}</Submission>!</h1></FlexContainer> : false}\n    <TableContainer>\n      {users.map(user => <Paper key={user.id}>\n        <h2 style={{ display: 'flex', justifyContent: 'space-between' }}><span>{user.name}</span>\n          {user.id === scoringId ? <span>Score</span> : false}\n        </h2>\n        {categories.map(category => {\n          let similar = similarityCheck(category, users, user.id, round)\n          let selfScoreCard = user.id === scoringId;\n          return <React.Fragment key={category}>\n            {similar.value && selfScoreCard ? <span style={{ color: theme.colors.red }}>{scorePartner.name || 'You'} and {similar.name} put down the same word for {category}</span> : false}\n            <div style={{ marginBottom: '10px', display: \"flex\", justifyContent: 'space-between', alignItems: 'center' }} key={category}>\n              <div style={{ width: selfScoreCard ? \"150px\" : \"auto\", fontSize: \"1.2em\" }}>\n                {category}:{`  `} <Submission>{user.responses[round][category] || '-'}</Submission>\n              </div>\n              {selfScoreCard ?\n                user.responses[round][category] ? <InputContainer>\n                  <NumberInput category={category} setCurrentScore={setCurrentScore} currentScore={currentScore} value={similar.value ? 5 : 0} /> </InputContainer> : <NumberContainer>0</NumberContainer>\n                : ''}\n            </div>\n          </React.Fragment>\n        }\n        )}\n        {user.id === scoringId ? <h2>{`Total Score: ${sumAllScores(currentScore)}`}</h2> : false}\n      </Paper>)}\n    </TableContainer>\n    </>\n    )}\n    <Container>\n      {!scoreSubmitted ? <>\n        <Button onClick={(event) => {\n          event.preventDefault()\n          handleSubmitScore(totalScore, scoringId)\n        }}>Submit</Button>\n      </> : <FlexColumn>\n          <h2>Waiting for others</h2>\n          <Spinner />\n        </FlexColumn>}\n    </Container>\n  </>\n  \n}\n\nconst similarityCheck = (category, users, currentUserId, round) => {\n  let currentUser = users.find(user => user.id === currentUserId);\n  let currentUserResponse = currentUser.responses[round][category] ? currentUser.responses[round][category].toLowerCase().trim() : null;\n\n  let value = false;\n  let name = null;\n  users.filter(user => user.id !== currentUserId).forEach(user => {\n    let otherResponse = user.responses[round][category] ? user.responses[round][category].toLowerCase().trim() : null;\n    if (currentUserResponse && otherResponse && (currentUserResponse === otherResponse)) {\n      value = true;\n      name = user.name\n    }\n    return;\n  })\n  return { value, name };\n}\n\nconst sumAllScores = (scores) => Object.keys(scores).map(cat => scores[cat]).reduce((a, b) => a + b, 0)\n\nconst NumberInput = ({ value, currentScore, setCurrentScore, category }) => {\n  const [numberValue, setNumberValue] = useState(value)\n  useEffect(() => {\n    setCurrentScore(Object.assign({}, currentScore, { [category]: value }))\n  }, [])\n\n  const onMinus = () => {\n    setCurrentScore(Object.assign({}, currentScore, { [category]: numberValue - 5 }))\n    if (!(numberValue <= 0)) setNumberValue(numberValue - 5)\n  }\n\n  const onPlus = () => {\n    setCurrentScore(Object.assign({}, currentScore, { [category]: numberValue + 5 }))\n    if (!(numberValue >= 10)) setNumberValue(numberValue + 5)\n  }\n  return <><StyledIncrementButton disabled={numberValue === 0} onClick={() => onMinus()}>-</StyledIncrementButton>{numberValue}<StyledIncrementButton disabled={numberValue === 10} onClick={() => onPlus()}>+</StyledIncrementButton></>\n}\n\n\nconst sortUserList = (users, scoringId) => {\n  let index = users.findIndex(user => user.id === scoringId);\n  if (index != -1) {\n    let first = users.splice(index, 1)[0];\n    users.unshift(first);\n    return users;\n  }\n  return users\n}\n\n\nexport default ResultsTable;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Button, FlexContainer, Spinner, FlexColumn } from '../StyledComponents'\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  text-align: center;\n  font-size: 1.5em;\n`\n\nconst ScoreTable = ({ maxRounds, gameState, round, handleStartNextRound }) => {\n  const [playerReady, setPlayerReady] = useState(false)\n  return <><Container>\n    {gameState.users.map(user => <div key={user.id}>\n      <h3>{user.name}</h3>\n      <p>{user.scores[round]}</p>\n    </div>)}\n  </Container>\n    <FlexContainer>\n      {playerReady ? <>\n        <FlexColumn>\n          <h2>Waiting for others</h2>\n          <Spinner />\n        </FlexColumn>\n      </> : <Button onClick={() => {\n        setPlayerReady(true)\n        handleStartNextRound()\n      }}>{round === maxRounds ? 'See Final Scores 🤩' : 'Start Next Round'}</Button>}\n    </FlexContainer>\n  </>\n}\n\nexport default ScoreTable;","import React from 'react';\n\nimport { Button, FlexContainer, FlexColumn, Spinner } from '../StyledComponents'\n\nconst StartGameScreen = ({ handleStartGame, isAdmin }) => {\n  return <FlexContainer>{\n    isAdmin ? <Button onClick={(event) => {\n      event.preventDefault()\n      handleStartGame()\n    }}>\n      Start Game\n    </Button> : <FlexColumn><h3>Waiting for admin to start the game..</h3><Spinner /></FlexColumn>}</FlexContainer>\n}\n\nexport default StartGameScreen;","import React from 'react';\nimport { ExitButton, ExitButtonContainer, Button } from './StyledComponents';\nimport styled from 'styled-components';\nimport theme from '../constants/theme';\n\nconst InstructionHeader = styled.h1`\n  color: ${theme.colors.red}\n`\n\nconst PaddedContainer = styled.div`\n  padding: 0 50px 0 50px;\n`\n\nconst Instructions = ({ cancel }) => <>\n  <ExitButtonContainer><ExitButton onClick={() => cancel()}>X</ExitButton></ExitButtonContainer>\n  <div>\n    <PaddedContainer>\n      <InstructionHeader>How To Play</InstructionHeader>\n      <h3>\n        The game is simple. The game creator sets the number of rounds and chooses the word categories.\n        <br />\n        The game is player over a couple of rounds. At the beginning of every round, players get a new alphabet. Your job is to think of words that begin with that letter and fit the categories in the game.\n    </h3>\n      <h3>Each game round is timed at 60 seconds, but the game alsos end as soon as the first person submits their response. Think fast!</h3>\n    </PaddedContainer>\n    <PaddedContainer>\n      <InstructionHeader>Creating A Game and Game Setup</InstructionHeader>\n      <h3>Head on over to the \"Create New Game\" section on the previous page to create a new game. You will be able to specify the number of rounds you would like to play as well as any additional categories you would want to include besides, \"Name\", \"Place\", \"Animal\" and \"Thing\".</h3>\n      <h3>You can also define \"scoring mechanics\". Select \"Score Yourself\" if you want people to score themselves, or select \"Score Each Other\" to score your friends. </h3>\n      <h3>Once you have created the game, you will get a \"Game Code\". Create the room and send the Game Code to your friends who will be able to use it join the room. Once your friends have joined, the creator will be able to start the game!\n  </h3>\n    </PaddedContainer>\n    <PaddedContainer>\n      <InstructionHeader>Scoring Rules</InstructionHeader>\n      <h3>Scoring Rules are simple:\n    <ul>\n          <li>+10 points for each unique answer</li>\n          <li>+5 points for each non-unique answer</li>\n          <li>+0 points for no answer</li>\n        </ul>\n      </h3>\n    </PaddedContainer>\n    <div style={{ textAlign: \"center\", margin: \"20px\" }}>\n      <Button fontSize=\"25px\" padding=\"15px\" minWidth=\"220px\" onClick={(event) => {\n        event.preventDefault()\n        cancel(false)\n      }}\n      >Understood, Let's Go!</Button></div>\n  </div></>\n\nexport default Instructions;","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\n\nimport { Button, StyledInput } from './StyledComponents'\nimport { socket } from '../constants/websocket'\n\nconst FormContainer = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n`\n\nconst FormItem = styled.p`\n`\n\nconst Join = ({ cancel, setGameData, setGamePlaying }) => {\n  const [name, setName] = useState('');\n  const [code, setCode] = useState('');\n\n  const gameData = {\n    name, code, isAdmin: false\n  }\n\n  const handleJoinGame = (event) => {\n    event.preventDefault();\n    socket.emit('join', { name, code }, ({ error, users, maxRounds, categories }) => {\n      if (error) {\n         \n        alert(error);\n      } else {\n        gameData.maxRounds = maxRounds;\n        gameData.users = users;\n        gameData.categories = categories;\n        setGameData(gameData)\n        setGamePlaying(true)\n      }\n    });\n  }\n\n  return (\n    <FormContainer>\n      <form>\n        <FormItem>\n          <label htmlFor=\"name\">Your Name:</label>\n          <StyledInput maxLength=\"15\" name=\"name\" type=\"text\" onChange={(event) => setName(event.target.value)} />\n        </FormItem>\n        <FormItem>\n          <label htmlFor=\"code\">Room Code:</label>\n          <StyledInput name=\"code\" maxLength=\"20\" type=\"text\" onChange={(event) => setCode(event.target.value)} />\n        </FormItem>\n        <Button fontSize=\"25px\" padding=\"15px\" minWidth=\"220px\" onClick={(event) => handleJoinGame(event)}>Join Your Friends!</Button>\n        <Button fontSize=\"25px\" padding=\"15px\" minWidth=\"220px\" onClick={() => cancel()} type=\"submit\">Cancel</Button>\n      </form>\n    </FormContainer>\n  )\n}\n\nexport default Join","import React, { useState } from 'react';\n\nimport Join from './Join';\nimport Create from './Create';\nimport Play from './Game/Play';\nimport Instructions from './Instructions';\nimport { HelpIcon } from './Game/GameHeader'; // Adjust the path as per your folder structure\n\nconst Landing = () => {\n  const [showJoinForm, toggleJoinForm] = useState(false);\n  const [showCreateForm, toggleCreateForm] = useState(false);\n  const [showInstructions, toggleInstructions] = useState(false);\n  const [isGamePlaying, setGamePlaying] = useState(false);\n  const [gameData, setGameData] = useState({});\n  const [soundOn, toggleSound] = useState(true);\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"text-center mt-5 mb-4\"> \n      </div>\n      <div className=\"d-flex flex-column align-items-center justify-content-center\">\n        <div className=\"card bg-light text-dark mb-3\">\n          <div className=\"card-body\">\n            {isGamePlaying ? (\n              <Play soundOn={soundOn} setGamePlaying={setGamePlaying} gameData={gameData} />\n            ) : showInstructions ? (\n              <Instructions cancel={() => toggleInstructions(false)} />\n            ) : (\n              <>\n                {!showJoinForm && !showCreateForm && (\n                  <div className=\"button-container\">\n                    <button className=\"btn btn-success my-3 mx-2\" onClick={() => {\n                      toggleJoinForm(true);\n                      toggleCreateForm(false);\n                    }}>\n                      Join Existing Game\n                    </button>\n                    <button className=\"btn btn-danger my-3 mx-2\" onClick={() => {\n                      toggleJoinForm(false);\n                      toggleCreateForm(true);\n                    }}>\n                      Create New Game\n                    </button>\n                  </div>\n                )}\n                {showJoinForm && <Join cancel={toggleJoinForm} setGamePlaying={setGamePlaying} setGameData={setGameData} />}\n                {showCreateForm && <Create setGamePlaying={setGamePlaying} setGameData={setGameData} cancel={toggleCreateForm} />}\n              </>\n            )}\n          </div>\n        </div>\n        <HelpIcon onClick={() => toggleInstructions(true)}>\n        ?\n      </HelpIcon>\n\n\n      </div>\n      {/* Additional components or footer */}\n    </div>\n  );\n};\n\nexport default Landing;\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components'\nimport theme from '../constants/theme';\n\nconst StyledInput = styled.input`\n  font-family: ${theme.font};\n  margin: 10px;\n  padding: 10px;\n  max-width: 100px;\n  min-width: ${props => props.minWidth || '80px'};\n  border: 1px solid black;\n  font-size: 1.2em;\n`\n\nconst Button = styled.button`\n  padding: ${props => props.padding || '10px 5px'};\n  margin: 5px;\n  min-width: ${props => props.minWidth || '150px'};\n  font-size: ${props => props.fontSize || '15px'};\n  color: white;\n  border: none;\n  background-color: ${props => props.disabled ? 'grey' : theme.colors.blue};\n  font-family: ${theme.font};\n  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n`\n\nconst FlexContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  flex-wrap: wrap;\n`\n\nconst FlexColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n// Create the keyframes\nconst spin = keyframes`\n  0% {\n    transform: rotateZ(0);\n  }\n  100% {\n    transform: rotateZ(360deg);\n  }\n`;\n\nconst SpinContainer = styled.div`\n  height: 50px;\n  width: 50px;\n  animation: ${spin} 1.4s linear infinite;\n`\n\nconst ExitButtonContainer = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  margin: 20px;\n`\n\nconst ExitButton = styled.button`\n  font-size: 15px;\n  color: ${theme.colors.red};\n  padding: 5px;\n  cursor: pointer;\n  width: 40px;\n  height: 40px;\n  border: 1px solid ${theme.colors.red};\n  box-shadow: ${theme.colors.red} 2px 2px 0px 0px;\n  border-radius: 20px;\n  font-family: 'Schoolbell', cursive;\n`\n\nconst SoundButtonContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  margin: 20px;\n  z-index: 9999;\n`\n\nconst SoundButton = styled.button`\n  font-size: 15px;\n  color: ${theme.colors.red};\n  padding: 5px;\n  cursor: pointer;\n  width: 40px;\n  height: 40px;\n  border: 1px solid ${theme.colors.red};\n  box-shadow: ${theme.colors.red} 2px 2px 0px 0px;\n  border-radius: 20px;\n  font-family: 'Schoolbell', cursive;\n  display: flex;\n`\n\nconst Spinner = () => {\n  return <SpinContainer><img alt=\"loading spinner\" src='/assets/spinner.svg' /></SpinContainer>\n}\n\nexport {\n  StyledInput,\n  Button,\n  FlexContainer,\n  Spinner,\n  FlexColumn,\n  ExitButtonContainer,\n  ExitButton,\n  SoundButtonContainer,\n  SoundButton\n}","const theme = {\n  backgroundColor: 'pink',\n  buttonBlue: '#24A0ED',\n  font: 'Schoolbell',\n  colors: {\n    peach: \"#fe6f5e\",\n    mustard: \"#ffcc33\",\n    lime: \"#afe313\",\n    aqua: \"#95e0e8\",\n    purple: \"#7070cc\",\n    red: \"red\",\n    blue: '#24A0ED',\n  }\n}\n\nexport const avatars =\n  { 1: '/assets/avatars/001.svg', 2: '/assets/avatars/002.svg', 3: '/assets/avatars/003.svg', 4: '/assets/avatars/004.svg', 5: '/assets/avatars/005.svg', 6: '/assets/avatars/006.svg', 7: '/assets/avatars/007.svg', 8: '/assets/avatars/008.svg', 9: '/assets/avatars/009.svg', 10: '/assets/avatars/010.svg' }\n\n\nexport default theme","// Shared web socket\nimport io from \"socket.io-client\";\n\n// const ENDPOINT = 'http://localhost:5000/'\nconst ENDPOINT =\n  \"https://name-place-animal-thing-server-60a49bfac610.herokuapp.com/\";\nconst socket = io(ENDPOINT);\n\nexport { socket };\n","import Head from 'next/head'\n\n\nimport Landing from '../components/Landing';\n\nexport default function Home() {\n  return (\n    <div className=\"container\">\n      <Head>\n        <title>Zookilla! | Online Multiplayer Game</title>\n        <link rel=\"icon\" href=\"https://zookilla.com/favicon.ico\" />\n      </Head>\n\n      <main>\n        <Landing />\n      </main>\n    </div>\n  )\n}\n","module.exports = require(\"clipboard-copy\");","module.exports = require(\"human-readable-ids\");","module.exports = require(\"next/head\");","module.exports = require(\"papaparse\");","module.exports = require(\"react\");","module.exports = require(\"socket.io-client\");","module.exports = require(\"styled-components\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AACA;AAgBA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAEA;AAEA;AAEA;AACA;AACA;AAAA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC/JA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;ACpCA;AACA;AAEA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAgBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACrHA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AACA;AAsBA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;ACraA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAdA;AACA;AAgBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;ACjUA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;AClCA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;;;;;;;;;;;;;;;;;;;;;AClDA;AACA;AAGA;AACA;AAEA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;;;;;;;;;;;;;;;;;;;;;;AC3DA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AACA;AAKA;AASA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AACA;AAaA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;ACnGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAJA;AAeA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;ACNA;AAGA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;AClBA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}