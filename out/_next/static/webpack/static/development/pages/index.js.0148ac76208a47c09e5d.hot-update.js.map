{"version":3,"file":"static/webpack/static/development/pages/index.js.0148ac76208a47c09e5d.hot-update.js","sources":["webpack:///./components/Game/GameHeader.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  font-size: 15px;\n  @media(max-width: 500px) {\n\n  }\n`\n\nconst TimerValue = styled.span`\n  position: relative;\n  top: 48px;\n`\n\nconst TimerContainer = styled.div`\n  background-image: url('/assets/timer.png');\n  height: 100px;\n  background-size: 100px;\n  width: 100px;\n  text-align: center;\n  font-size: 1.3em;\n`\n\nconst RoundContainer = styled.div`\n  font-size: 1.8em;\n  position: relative;\n  top: 30px;\n  @media(max-width: 500px) {\n    font-size: 1em;\n  }\n  display: flex;\n  flex-direction: column;\n`\n\nconst BoldContent = styled.span`\n  color: red;\n  font-weight: bold;\n  font-size: 1.2em;\n`\nconst HelpIcon = styled.div`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  width: 40px;\n  height: 40px;\n  background-color: #007bff; /* Blue background */\n  color: white;\n  border-radius: 50%;\n  text-align: center;\n  line-height: 40px; /* Vertically center the question mark */\n  font-size: 20px;\n  cursor: pointer;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); /* Optional: adds shadow for depth */\n`;\n\nlet tickingSound;\n\nconst GameHeader = ({ roundNumber, timerValue, currentAlphabet, maxRounds, soundOn }) => {\n  useEffect(() => {\n    tickingSound = new Audio('/assets/audio/ticking-timer.wav');\n\n    tickingSound.load()\n    return function cleanup() {\n      pauseAudio(tickingSound)\n    };\n  }, []);\n\n  if (tickingSound && timerValue === 49 && soundOn) {\n    playAudio(tickingSound)\n  }\n\n  if (!soundOn || timerValue === 60) {\n    pauseAudio(tickingSound)\n  }\n\n  return <Container>\n    <RoundContainer>\n      <span>Round <BoldContent>{`#${roundNumber}/${maxRounds}`}</BoldContent></span>\n      <span>Current Alphabet: <BoldContent>{currentAlphabet || 'Not Selected'}</BoldContent></span>\n    </RoundContainer>\n    <TimerContainer><TimerValue>{timerValue}</TimerValue></TimerContainer>\n  </Container>\n}\n\nconst playAudio = (audio) => {\n  const audioPromise = audio.play()\n  if (audioPromise !== undefined) {\n    audioPromise\n      .then(_ => {\n        // autoplay started\n      })\n      .catch(err => {\n        // catch dom exception\n        console.info(err)\n      })\n  }\n}\n\nconst pauseAudio = (audio) => {\n  const audioPromise = audio.pause()\n  if (audioPromise !== undefined) {\n    audioPromise\n      .then(_ => {\n        audio.load()\n      })\n      .catch(err => {\n        // catch dom exception\n        console.info(err)\n      })\n  }\n}\n\nexport default GameHeader;"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAgsourceRoot":""}